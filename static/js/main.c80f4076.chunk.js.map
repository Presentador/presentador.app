{"version":3,"sources":["theme.ts","renderers/singleHeader.tsx","renderers/twoHeaders.tsx","renderers/normal.tsx","renderers/headerSingleParagraph.tsx","renderers/blockquote.tsx","renderers/headerManyParagraphs.tsx","renderers/headerCodeblock.tsx","renderers/headerManyParagraphsImage.tsx","renderers/headerParagraphImage.tsx","renderers/image.tsx","renderers/manyImages.tsx","renderers/headerImage.tsx","renderers/headerBlockquote.tsx","renderers/headerList.tsx","renderers/headerListImage.tsx","renderers/index.tsx","context/slides.ts","context/thumbnails.ts","context/deck.ts","components/menu/StyledButton.tsx","components/menu/Image.tsx","components/menu/Save.tsx","components/menu/Load.tsx","components/Elements.tsx","components/Thumbnail.tsx","components/Controls.tsx","components/elements/Header.tsx","components/elements/Paragraph.tsx","components/elements/Image.tsx","components/elements/List.tsx","components/elements/Blockquote.tsx","components/elements/FooterItem.tsx","components/Slide.tsx","components/LoadingBar.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["colours","Container","styled","div","TopContainer","BottomContainer","BlockContainer","LeftContainer","RightContainer","ImageContainer","renderersMap","singleHeader","children","find","item","type","displayName","className","twoHeaders","filter","mainHeader","secondHeader","normal","map","child","index","headerSingleParagraph","header","paragraph","headerCodeblock","headerManyParagraphsImage","image","paragraphs","headerParagraphImage","manyImages","itemSize","length","style","flex","headerImage","headerList","list","headerListImage","blockquote","headerManyParagraphs","headerBlockquote","buildersMap","add","remove","elements","SlidesContext","React","createContext","slides","setSlides","addSlide","removeSlide","addElement","removeElement","changeElementValue","ThumbnailsContext","thumbnails","setThumbnails","DeckContext","size","setSize","present","setPresent","currentSlide","setCurrentSlide","loading","setLoading","StyledButton","button","Modal","TextContainer","CenteredContainer","Image","useContext","useState","imageModalOpen","setImageModalOpen","useEffect","callback","event","items","clipboardData","kind","getAsString","string","a","url","URL","fetch","toString","response","reader","FileReader","onload","target","result","id","Date","getTime","value","blob","readAsDataURL","getAsFile","document","addEventListener","removeEventListener","onClick","Save","_","ref","obj","version","Blob","JSON","stringify","fileSave","fileName","extensions","current","console","log","name","forwardRef","Load","fileOpen","handle","text","contents","parse","Left","Center","Right","Elements","togglePresent","fileHandle","useRef","level","StyledRemoveButton","StyledAddButton","StyledImage","img","active","StyledLoadingPlaceholder","Thumbnail","src","number","hover","setHover","Tag","alt","onMouseEnter","onMouseLeave","first","slice","rest","Controls","update","html2canvas","canvas","currentThumbnails","toDataURL","StyledHeader","selected","Header","slideNumber","editingElement","setSelected","as","onKeyDown","code","preventDefault","blur","onInput","onBlur","setAttribute","innerText","onFocus","data-id","tabIndex","onMouseDown","StyledParagraph","p","Paragraph","loadingState","key","onLoad","StyledList","ul","List","dangerouslySetInnerHTML","__html","split","element","createElement","innerHTML","sanitizeHTML","join","StyledBlockquote","Blockquote","StyledFooterItem","FooterItem","SizeWrapper","scaleSize","StyledSlide","Footer","Slide","scale","setScale","slide","Wrapper","state","updateSize","Math","min","window","innerWidth","innerHeight","useLayoutEffect","StyledLoadingBar","reduce","initial","last","LoadingBar","GlobalStyle","createGlobalStyle","reset","SlideWrapper","App","slideWrapperRef","prev","nextState","at","useSlidesState","useThumbnailsState","useDeckState","screenfull","isEnabled","isFullscreen","on","off","totalSlides","Provider","request","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c80f4076.chunk.js","sourcesContent":["export const colours = {\n  darkText: \"#424242\",\n  lightText: \"#737373\",\n  primary: \"#4285f4\",\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: ${colours.primary};\n  color: white;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  padding: 2em;\n`;\n\nexport function SingleHeaderRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <div className=\"container\">{children}</div>\n    </Container>\n  );\n}\nexport const SingleHeaderBuilder: Builder = {\n  add: (type) => {\n    if (type === \"heading\") return \"twoHeaders\";\n    if (type === \"paragraph\") return \"headerSingleParagraph\";\n    if (type === \"list\") return \"headerList\";\n    if (type === \"image\") return \"headerImage\";\n    if (type === \"code_block\") return \"headerCodeblock\";\n    if (type === \"blockquote\") return \"headerBlockquote\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: ${colours.primary};\n  color: white;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n  padding: 1.5em;\n`;\nconst BottomContainer = styled.div`\n  padding: 1.5em;\n`;\n\nexport function TwoHeadersRenderer({ children }: { children: JSX.Element[] }) {\n  const [mainHeader, secondHeader] = children.filter(\n    (item) => item.type.displayName === \"Header\"\n  );\n\n  if (!mainHeader) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{mainHeader}</TopContainer>\n      <BottomContainer>{secondHeader}</BottomContainer>\n    </Container>\n  );\n}\nexport const TwoHeadersBuilder: Builder = {\n  add: (type) => {\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"singleHeader\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: white;\n  padding: 1.5em;\n`;\nconst BlockContainer = styled.div`\n  display: block;\n  padding-bottom: 0.5em;\n\n  & > * {\n    padding-bottom: 1em;\n    max-width: 100%;\n  }\n`;\n\nexport function NormalRenderer({ children }: { children: JSX.Element[] }) {\n  return (\n    <Container>\n      {children.map((child, index) => (\n        <BlockContainer key={index}>{child}</BlockContainer>\n      ))}\n    </Container>\n  );\n}\n\nexport const NormalBuilder: Builder = {\n  add: (type, elements) => {\n    if (type === \"heading\" && !elements.length) return \"singleHeader\";\n    if (type === \"image\" && !elements.length) return \"image\";\n    if (type === \"blockquote\" && !elements.length) return \"blockquote\";\n\n    return \"normal\";\n  },\n  remove: (type, elements) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n\n  padding: 1.5em;\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  flex: 2;\n  padding: 1.5em;\n\n  p {\n    color: ${colours.lightText};\n  }\n`;\n\nexport function HeaderSingleParagraphRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const paragraph = children.find(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>{paragraph}</BottomContainer>\n    </Container>\n  );\n}\n\nexport const HeaderSingleParagraphBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"headerManyParagraphs\";\n    if (type === \"image\") return \"headerParagraphImage\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    if (type === \"heading\") return \"normal\";\n    if (type === \"paragraph\") return \"singleHeader\";\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  color: ${colours.lightText};\n\n  blockquote {\n    padding: 50px;\n    background: #f9f9f9;\n  }\n`;\n\nexport function BlockquoteRenderer({ children }: { children: JSX.Element[] }) {\n  const blockquote = children.find(\n    (item) => item.type.displayName === \"Blockquote\"\n  );\n\n  if (!blockquote) {\n    return <></>;\n  }\n\n  return <Container>{blockquote}</Container>;\n}\n\nexport const BlockquoteBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"blockquote\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n  padding: 1.5em;\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  flex: 2;\n  padding: 1.5em;\n  p {\n    color: ${colours.lightText};\n    padding-bottom: 0.5em;\n  }\n`;\n\nexport function HeaderManyParagraphsRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const paragraphs = children.filter(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>{paragraphs}</BottomContainer>\n    </Container>\n  );\n}\n\nexport const HeaderManyParagraphsBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"headerManyParagraphs\";\n    if (type === \"image\") return \"headerManyParagraphsImage\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  .top {\n    background-color: ${colours.primary};\n    flex: 1;\n    display: flex;\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5 {\n      display: flex;\n      align-items: flex-end;\n      color: white;\n    }\n  }\n  .bottom {\n    align-items: center;\n    display: flex;\n    justify-content: center;\n    flex: 2;\n\n    pre {\n      display: block;\n      width: 100%;\n      height: 100%;\n\n      code {\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport function HeaderCodeblockRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const paragraph = children.find(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <div className=\"top\">{header}</div>\n      <div className=\"bottom\">{paragraph}</div>\n    </Container>\n  );\n}\n\nexport const HeaderCodeblockBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"headerManyParagraphs\";\n    if (type === \"image\") return \"headerManyParagraphsImage\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst LeftContainer = styled.div`\n  padding: 1em;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: ${colours.primary};\n  color: white;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    flex: 1;\n  }\n\n  .paragraphs {\n    flex: 2;\n\n    p {\n    }\n  }\n`;\nconst RightContainer = styled.div`\n  flex: 2;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  padding: 1.5em;\n`;\n\nconst ImageContainer = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 100%;\n\n  img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nexport function HeaderManyParagraphsImageRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const image = children.find((item) => item.type.displayName === \"Image\");\n  const paragraphs = children.filter(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <LeftContainer>\n        {header}\n        <div className=\"paragraphs\">{paragraphs}</div>\n      </LeftContainer>\n      <RightContainer>\n        <ImageContainer>{image}</ImageContainer>\n      </RightContainer>\n    </Container>\n  );\n}\n\nexport const HeaderManyParagraphsImageBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"headerManyParagraphs\";\n    if (type === \"image\") return \"headerManyParagraphsImage\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst LeftContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 1em;\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    flex: 1;\n    color: ${colours.darkText};\n  }\n\n  p {\n    color: ${colours.lightText};\n    flex: 1;\n  }\n`;\nconst RightContainer = styled.div`\n  flex: 2;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  padding: 1.5em;\n`;\n\nconst ImageContainer = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 100%;\n\n  img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nexport function HeaderParagraphImageRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const image = children.find((item) => item.type.displayName === \"Image\");\n  const paragraph = children.find(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <LeftContainer>\n        {header}\n        {paragraph}\n      </LeftContainer>\n      <RightContainer>\n        <ImageContainer>{image}</ImageContainer>\n      </RightContainer>\n    </Container>\n  );\n}\n\nexport const HeaderParagraphImageBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"headerManyParagraphs\";\n    if (type === \"image\") return \"headerManyParagraphsImage\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 1.5em;\n`;\n\nconst ImageContainer = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n\n  img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nexport function ImageRenderer({ children }: { children: JSX.Element[] }) {\n  const image = children.find((item) => item.type.displayName === \"Image\");\n\n  if (!image) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <ImageContainer>{image}</ImageContainer>\n    </Container>\n  );\n}\n\nexport const ImageBuilder: Builder = {\n  add: (type) => {\n    if (type === \"image\") return \"manyImages\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: ${colours.primary};\n  color: white;\n  padding: 1.5em;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n\n  .image {\n    justify-content: center;\n    align-items: center;\n    display: flex;\n    padding: 0.5em;\n\n    img {\n      max-width: 100%;\n      height: auto;\n    }\n  }\n`;\n\nexport function ManyImagesRenderer({ children }: { children: JSX.Element[] }) {\n  const itemSize =\n    children.length >= 2 && children.length <= 4\n      ? \"50%\"\n      : children.length >= 5 && children.length <= 7\n      ? \"33.3%\"\n      : children.length > 7\n      ? \"25%\"\n      : 0;\n\n  return (\n    <Container>\n      {children.map((item, index) => (\n        <div key={index} className=\"image\" style={{ flex: `${itemSize}` }}>\n          {item}\n        </div>\n      ))}\n    </Container>\n  );\n}\n\nexport const ManyImagesBuilder: Builder = {\n  add: (type) => {\n    if (type === \"image\") return \"manyImages\";\n    return \"normal\";\n  },\n  remove: (type: string) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n  padding: 1.5em;\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  flex: 2;\n  padding: 1.5em;\n`;\nconst ImageContainer = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 100%;\n\n  img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nexport function HeaderImageRenderer({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const image = children.find((item) => item.type.displayName === \"Image\");\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>\n        <ImageContainer>{image}</ImageContainer>\n      </BottomContainer>\n    </Container>\n  );\n}\n\nexport const HeaderImageBuilder: Builder = {\n  add: (type) => {\n    return \"normal\";\n  },\n  remove: (type) => {\n    if (type === \"image\") return \"singleHeader\";\n    if (type === \"heading\") return \"image\";\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n  padding: 1.5em;\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  flex: 2;\n  padding: 1.5em;\n`;\n\nexport function HeaderBlockquoteRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const blockquote = children.find(\n    (item) => item.type.displayName === \"Blockquote\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>{blockquote}</BottomContainer>\n    </Container>\n  );\n}\n\nexport const HeaderBlockquoteBuilder: Builder = {\n  add: (type) => {\n    return \"normal\";\n  },\n  remove: (type) => {\n    if (type === \"blockquote\") return \"singleHeader\";\n    if (type === \"heading\") return \"blockquote\";\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n  padding: 1.5em;\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  flex: 2;\n  padding: 1.5em;\n  font-size: 1.1em;\n\n  line-height: 2em;\n  color: ${colours.lightText};\n\n  ul,\n  li {\n    color: ${colours.lightText};\n    list-style-type: circle;\n  }\n`;\n\nexport function HeaderListRenderer({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const list = children.find((item) => item.type.displayName === \"List\");\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>{list}</BottomContainer>\n    </Container>\n  );\n}\n\nexport const HeaderListBuilder: Builder = {\n  add: (type) => {\n    if (type === \"image\") return \"headerListImage\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"singleHeader\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst LeftContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 1em;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    flex: 1;\n    color: ${colours.darkText};\n    padding-bottom: 0.5em;\n  }\n\n  p,\n  ul {\n    padding-bottom: 0.5em;\n    color: ${colours.lightText};\n    flex: 1;\n  }\n`;\nconst RightContainer = styled.div`\n  flex: 2;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  padding: 1.5em;\n`;\n\nconst ImageContainer = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 100%;\n\n  img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\nexport function HeaderListImageRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const list = children.find((item) => item.type.displayName === \"List\");\n  const image = children.find((item) => item.type.displayName === \"Image\");\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <LeftContainer>\n        {header}\n        {list}\n      </LeftContainer>\n      <RightContainer>\n        <ImageContainer>{image}</ImageContainer>\n      </RightContainer>\n    </Container>\n  );\n}\n\nexport const HeaderListImageBuilder: Builder = {\n  add: (type) => {\n    return \"normal\";\n  },\n  remove: (type) => {\n    if (type === \"image\") return \"headerList\";\n    if (type === \"list\") return \"headerImage\";\n    return \"singleHeader\";\n  },\n};\n","import { Builder, State } from \"../types\";\n\nimport { SingleHeaderRenderer, SingleHeaderBuilder } from \"./singleHeader\";\nimport { TwoHeadersRenderer, TwoHeadersBuilder } from \"./twoHeaders\";\nimport { NormalRenderer, NormalBuilder } from \"./normal\";\nimport {\n  HeaderSingleParagraphRenderer,\n  HeaderSingleParagraphBuilder,\n} from \"./headerSingleParagraph\";\nimport { BlockquoteRenderer, BlockquoteBuilder } from \"./blockquote\";\nimport {\n  HeaderManyParagraphsRenderer,\n  HeaderManyParagraphsBuilder,\n} from \"./headerManyParagraphs\";\nimport {\n  HeaderCodeblockRenderer,\n  HeaderCodeblockBuilder,\n} from \"./headerCodeblock\";\nimport {\n  HeaderManyParagraphsImageRenderer,\n  HeaderManyParagraphsImageBuilder,\n} from \"./headerManyParagraphsImage\";\nimport {\n  HeaderParagraphImageRenderer,\n  HeaderParagraphImageBuilder,\n} from \"./headerParagraphImage\";\nimport { ImageRenderer, ImageBuilder } from \"./image\";\nimport { ManyImagesRenderer, ManyImagesBuilder } from \"./manyImages\";\nimport { HeaderImageRenderer, HeaderImageBuilder } from \"./headerImage\";\nimport {\n  HeaderBlockquoteRenderer,\n  HeaderBlockquoteBuilder,\n} from \"./headerBlockquote\";\nimport { HeaderListRenderer, HeaderListBuilder } from \"./headerList\";\nimport {\n  HeaderListImageRenderer,\n  HeaderListImageBuilder,\n} from \"./headerListImage\";\n\nexport const renderersMap: Record<State, any> = {\n  singleHeader: SingleHeaderRenderer,\n  twoHeaders: TwoHeadersRenderer,\n  normal: NormalRenderer,\n  headerSingleParagraph: HeaderSingleParagraphRenderer,\n  headerCodeblock: HeaderCodeblockRenderer,\n  headerManyParagraphsImage: HeaderManyParagraphsImageRenderer,\n  headerParagraphImage: HeaderParagraphImageRenderer,\n  image: ImageRenderer,\n  manyImages: ManyImagesRenderer,\n  headerImage: HeaderImageRenderer,\n  headerList: HeaderListRenderer,\n  headerListImage: HeaderListImageRenderer,\n  blockquote: BlockquoteRenderer,\n  headerManyParagraphs: HeaderManyParagraphsRenderer,\n  headerBlockquote: HeaderBlockquoteRenderer,\n};\n\nexport const buildersMap: Record<State, Builder> = {\n  singleHeader: SingleHeaderBuilder,\n  twoHeaders: TwoHeadersBuilder,\n  normal: NormalBuilder,\n  headerSingleParagraph: HeaderSingleParagraphBuilder,\n  headerCodeblock: HeaderCodeblockBuilder,\n  headerManyParagraphsImage: HeaderManyParagraphsImageBuilder,\n  headerParagraphImage: HeaderParagraphImageBuilder,\n  image: ImageBuilder,\n  manyImages: ManyImagesBuilder,\n  headerImage: HeaderImageBuilder,\n  headerList: HeaderListBuilder,\n  headerListImage: HeaderListImageBuilder,\n  blockquote: BlockquoteBuilder,\n  headerManyParagraphs: HeaderManyParagraphsBuilder,\n  headerBlockquote: HeaderBlockquoteBuilder,\n};\n","import React, { useState } from \"react\";\n\nimport { Slide, Element } from \"../types\";\n\nimport { buildersMap } from \"../renderers\";\n\nexport function useSlidesState() {\n  const [slides, setSlides] = useState<Slide[]>([\n    {\n      state: \"headerList\",\n      elements: [\n        {\n          id: 1,\n          type: \"heading\",\n          value: \"Presentador: An opinionated presentation app\",\n          level: 1,\n        },\n        {\n          id: 2,\n          type: \"list\",\n          value:\n            \"It places your elements in the right place so you don't have to.\\nIt's open-source.\\nTry removing this list element and add another one.\",\n          level: 1,\n        },\n      ],\n    },\n  ]);\n\n  function addSlide(at: number = slides.length) {\n    setSlides((prev) => {\n      const first = prev.slice(0, at);\n      const rest = prev.slice(at);\n      return [...first, { state: \"normal\", elements: [] }, ...rest];\n    });\n  }\n  function removeSlide(number: number) {\n    setSlides((prev) => prev.filter((_, index) => index !== number));\n  }\n\n  async function addElement(slideNumber: number, item: Element) {\n    setSlides((prev) =>\n      prev.map((slide, index) => {\n        if (index !== slideNumber) {\n          return slide;\n        }\n\n        const nextState =\n          item.type === \"footer\"\n            ? slide.state\n            : buildersMap[slide.state].add(item.type, slide.elements);\n\n        return {\n          elements: [...slide.elements, item],\n          state: nextState,\n        };\n      })\n    );\n  }\n\n  function removeElement(slideNumber: number, id: number) {\n    setSlides((prev) =>\n      prev.map((slide, index) => {\n        if (index !== slideNumber) {\n          return slide;\n        }\n\n        const element = slide.elements.find((item) => item.id === id);\n\n        if (!element) {\n          return slide;\n        }\n\n        const nextState =\n          element.type === \"footer\"\n            ? slide.state\n            : buildersMap[slide.state].remove(element.type, slide.elements);\n\n        return {\n          elements: slide.elements.filter((item) => item.id !== id),\n          state: nextState,\n        };\n      })\n    );\n  }\n\n  function changeElementValue(slideNumber: number, id: number, value: string) {\n    setSlides((prev) =>\n      prev.map((slide, index) => {\n        if (index !== slideNumber) {\n          return slide;\n        }\n\n        return {\n          ...slide,\n          elements: slide.elements.map((item) =>\n            item.id === id ? { ...item, value } : item\n          ),\n        };\n      })\n    );\n  }\n\n  return {\n    slides,\n    setSlides,\n    addElement,\n    removeElement,\n    changeElementValue,\n    addSlide,\n    removeSlide,\n  };\n}\n\nexport const SlidesContext = React.createContext<{\n  slides: Slide[];\n  setSlides: (slides: Slide[]) => void;\n  removeSlide: (id: number) => void;\n  addSlide: (id?: number) => void;\n  addElement: (slideNumber: number, item: Element) => void;\n  removeElement: (slideNumber: number, id: number) => void;\n  changeElementValue: (slideNumber: number, id: number, value: string) => void;\n}>({\n  slides: [],\n  setSlides: () => {},\n  addSlide: () => {},\n  removeSlide: () => {},\n  addElement: () => {},\n  removeElement: () => {},\n  changeElementValue: () => {},\n});\n","import React, { useState } from \"react\";\n\nexport function useThumbnailsState() {\n  const [thumbnails, setThumbnails] = useState<string[]>([\"\"]);\n\n  return { thumbnails, setThumbnails };\n}\n\nexport const ThumbnailsContext = React.createContext<{\n  thumbnails: string[];\n  setThumbnails: (\n    callback: string[] | ((thumbnails: string[]) => string[])\n  ) => void;\n}>({\n  thumbnails: [],\n  setThumbnails: () => {},\n});\n","import React, { useState } from \"react\";\n\nexport function useDeckState() {\n  const [present, setPresent] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [size, setSize] = useState<[number, number]>([960, 700]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  return {\n    loading,\n    setLoading,\n    currentSlide,\n    setCurrentSlide,\n    present,\n    setPresent,\n    size,\n    setSize,\n  };\n}\n\nexport const DeckContext = React.createContext<{\n  currentSlide: number;\n  setCurrentSlide: (number: number) => void;\n  loading: boolean;\n  setLoading: (state: boolean) => void;\n  present: boolean;\n  setPresent: (present: boolean) => void;\n  size: [number, number];\n  setSize: (size: [number, number]) => void;\n}>({\n  size: [0, 0],\n  setSize: () => {},\n  present: false,\n  setPresent: () => {},\n  currentSlide: 0,\n  setCurrentSlide: () => {},\n  loading: false,\n  setLoading: () => {},\n});\n","import styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  padding: 10px;\n  margin-right: 5px;\n`;\n\nexport default StyledButton;\n","import { useEffect, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { DeckContext } from \"../../context/deck\";\n\nimport StyledButton from \"./StyledButton\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n  vertical-align: top;\n`;\n\nconst Modal = styled.div`\n  position: absolute;\n  top: 100%;\n  z-index: 999999;\n  width: 15em;\n  height: 10em;\n  border: 1px solid #ccc;\n  background: #fff;\n`;\n\nconst TextContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst CenteredContainer = styled.div`\n  flex: 1;\n  text-align: center;\n`;\n\nfunction Image() {\n  const { addElement } = useContext(SlidesContext);\n  const { currentSlide, setLoading } = useContext(DeckContext);\n\n  const [imageModalOpen, setImageModalOpen] = useState(false);\n\n  useEffect(() => {\n    const callback = (event: any) => {\n      const items = event.clipboardData.items;\n      for (const index in items) {\n        const item = items[index];\n        if (item.kind === \"string\") {\n          setLoading(true);\n          item.getAsString(async (string: string) => {\n            try {\n              const url = new URL(string);\n              const response = await fetch(url.toString());\n\n              const reader = new FileReader();\n              reader.onload = function (event) {\n                if (event?.target?.result) {\n                  addElement(currentSlide, {\n                    id: new Date().getTime(),\n                    type: \"image\",\n                    value: event?.target?.result as string,\n                  });\n                  setImageModalOpen(false);\n                  setLoading(false);\n                }\n              };\n              reader.readAsDataURL(await response.blob());\n            } catch (error) {\n              setLoading(false);\n              return false;\n            }\n          });\n        }\n        if (item.kind === \"file\") {\n          setLoading(true);\n          const blob = item.getAsFile();\n          const reader = new FileReader();\n          reader.onload = function (event) {\n            if (event?.target?.result) {\n              addElement(currentSlide, {\n                id: new Date().getTime(),\n                type: \"image\",\n                value: event?.target?.result as string,\n              });\n              setImageModalOpen(false);\n              setLoading(false);\n            }\n          };\n          blob && reader.readAsDataURL(blob);\n        }\n      }\n    };\n\n    document.addEventListener(\"paste\", callback);\n    return () => document.removeEventListener(\"paste\", callback);\n  }, [currentSlide]); // eslint-disable-line\n\n  return (\n    <Container>\n      <StyledButton onClick={() => setImageModalOpen(!imageModalOpen)}>\n        Img\n      </StyledButton>\n      {imageModalOpen && (\n        <Modal>\n          <TextContainer>\n            <CenteredContainer>\n              Past the image directly or its remote URL or drag and drop it as a\n              file.\n            </CenteredContainer>\n          </TextContainer>\n        </Modal>\n      )}\n    </Container>\n  );\n}\n\nexport default Image;\n","import { forwardRef, useContext } from \"react\";\nimport { fileSave } from \"browser-fs-access\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { DeckContext } from \"../../context/deck\";\nimport { ThumbnailsContext } from \"../../context/thumbnails\";\n\nimport StyledButton from \"./StyledButton\";\n\nfunction Save(_: any, ref: any) {\n  const { slides } = useContext(SlidesContext);\n  const { thumbnails } = useContext(ThumbnailsContext);\n  const { setLoading, size } = useContext(DeckContext);\n\n  async function save() {\n    setLoading(true);\n    const obj = { version: 1, slides, thumbnails, size };\n    const blob = new Blob([JSON.stringify(obj, null, 2)], {\n      type: \"application/json\",\n    });\n    try {\n      ref.current = await fileSave(\n        blob,\n        {\n          fileName: \"presentation.prt\",\n          extensions: [\".prt\"],\n        },\n        ref.current\n      );\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <StyledButton onClick={save}>\n      Save <b>{ref.current && ref.current.name}</b>\n    </StyledButton>\n  );\n}\n\nexport default forwardRef(Save);\n","import { forwardRef, useContext } from \"react\";\nimport { fileOpen } from \"browser-fs-access\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { DeckContext } from \"../../context/deck\";\nimport { ThumbnailsContext } from \"../../context/thumbnails\";\n\nimport StyledButton from \"./StyledButton\";\n\nfunction Load(_: any, ref: any) {\n  const { setSlides } = useContext(SlidesContext);\n  const { setThumbnails } = useContext(ThumbnailsContext);\n  const { setLoading, setSize } = useContext(DeckContext);\n\n  async function load() {\n    setLoading(true);\n    try {\n      const blob = await fileOpen({\n        extensions: [\".prt\"],\n      });\n\n      ref.current = blob.handle;\n\n      const contents = await blob.text();\n      const { slides, thumbnails, size } = JSON.parse(contents);\n      setSlides(slides);\n      setThumbnails(thumbnails);\n      setSize(size);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return <StyledButton onClick={load}>Load</StyledButton>;\n}\n\nexport default forwardRef(Load);\n","import styled from \"styled-components\";\nimport { useRef, useContext } from \"react\";\nimport { FileSystemHandle } from \"browser-fs-access\";\n\nimport { SlidesContext } from \"../context/slides\";\nimport { DeckContext } from \"../context/deck\";\n\nimport StyledButton from \"./menu/StyledButton\";\nimport Image from \"./menu/Image\";\nimport Save from \"./menu/Save\";\nimport Load from \"./menu/Load\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-orientation: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Left = styled.div`\n  flex: 1;\n`;\nconst Center = styled.div`\n  flex: 2;\n  text-align: center;\n`;\nconst Right = styled.div`\n  flex: 1;\n`;\n\nfunction Elements({ togglePresent }: { togglePresent: () => void }) {\n  const fileHandle = useRef<FileSystemHandle | null>(null);\n\n  const { addElement } = useContext(SlidesContext);\n  const { currentSlide } = useContext(DeckContext);\n\n  return (\n    <Container>\n      <Left>\n        <StyledButton\n          onClick={() => {\n            togglePresent();\n          }}\n        >\n          Present\n        </StyledButton>\n        <Save ref={fileHandle} />\n        <Load ref={fileHandle} />\n      </Left>\n      <Center>\n        <StyledButton\n          onClick={() =>\n            addElement(currentSlide, {\n              id: new Date().getTime(),\n              type: \"heading\",\n              level: 1,\n              value: \"Heading 1\",\n            })\n          }\n        >\n          H1\n        </StyledButton>\n        <StyledButton\n          onClick={() =>\n            addElement(currentSlide, {\n              id: new Date().getTime(),\n              type: \"heading\",\n              level: 2,\n              value: \"Heading 2\",\n            })\n          }\n        >\n          H2\n        </StyledButton>\n        <StyledButton\n          onClick={() =>\n            addElement(currentSlide, {\n              id: new Date().getTime(),\n              type: \"heading\",\n              level: 3,\n              value: \"Heading 3\",\n            })\n          }\n        >\n          H3\n        </StyledButton>\n        <StyledButton\n          onClick={() =>\n            addElement(currentSlide, {\n              id: new Date().getTime(),\n              type: \"heading\",\n              level: 4,\n              value: \"Heading 4\",\n            })\n          }\n        >\n          H4\n        </StyledButton>\n        <StyledButton\n          onClick={() =>\n            addElement(currentSlide, {\n              id: new Date().getTime(),\n              type: \"heading\",\n              level: 5,\n              value: \"Heading 5\",\n            })\n          }\n        >\n          H5\n        </StyledButton>\n        <StyledButton\n          onClick={() =>\n            addElement(currentSlide, {\n              id: new Date().getTime(),\n              type: \"heading\",\n              level: 6,\n              value: \"Heading 6\",\n            })\n          }\n        >\n          H6\n        </StyledButton>\n        <StyledButton\n          onClick={() =>\n            addElement(currentSlide, {\n              id: new Date().getTime(),\n              type: \"paragraph\",\n              value:\n                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\",\n            })\n          }\n        >\n          P\n        </StyledButton>\n        <Image />\n        <StyledButton\n          onClick={() =>\n            addElement(currentSlide, {\n              id: new Date().getTime(),\n              type: \"list\",\n              value: \"Point one to make\",\n            })\n          }\n        >\n          Li\n        </StyledButton>\n        <StyledButton\n          onClick={() =>\n            addElement(currentSlide, {\n              id: new Date().getTime(),\n              type: \"blockquote\",\n              value: \"A wise man once said...\",\n            })\n          }\n        >\n          Q\n        </StyledButton>\n        <StyledButton\n          onClick={() =>\n            addElement(currentSlide, {\n              id: new Date().getTime(),\n              type: \"footer\",\n              value: \"Made with Presentador\",\n            })\n          }\n        >\n          F\n        </StyledButton>\n      </Center>\n      <Right></Right>\n    </Container>\n  );\n}\n\nexport default Elements;\n","import { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../context/slides\";\nimport { DeckContext } from \"../context/deck\";\nimport { ThumbnailsContext } from \"../context/thumbnails\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledRemoveButton = styled.button`\n  padding: 5px;\n  font-size: 1.1em;\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 9999;\n`;\nconst StyledAddButton = styled.button`\n  padding: 5px;\n  font-size: 1.1em;\n  position: absolute;\n  top: 0;\n  right: -25px;\n  z-index: 9999;\n`;\n\nconst StyledImage = styled.img<{ active: boolean }>`\n  display: inline-block;\n  width: 150px;\n  height: 100px;\n  vertical-align: middle;\n  border: ${({ active }) => (active ? \"1px solid red\" : \"none\")};\n  cursor: pointer;\n`;\nconst StyledLoadingPlaceholder = styled.div<{ active: boolean }>`\n  display: inline-block;\n  width: 150px;\n  height: 100px;\n  vertical-align: middle;\n  border: ${({ active }) => (active ? \"1px solid red\" : \"none\")};\n`;\n\nfunction Thumbnail({\n  src,\n  active,\n  number,\n}: {\n  src: string;\n  active: boolean;\n  number: number;\n}) {\n  const { addSlide, removeSlide } = useContext(SlidesContext);\n  const { currentSlide, setCurrentSlide } = useContext(DeckContext);\n  const { thumbnails, setThumbnails } = useContext(ThumbnailsContext);\n  const [hover, setHover] = useState(false);\n\n  const Tag =\n    src !== \"\" ? (\n      <StyledImage\n        active={active}\n        src={src}\n        alt={`Slide`}\n        onClick={() => setCurrentSlide(number)}\n      />\n    ) : (\n      <StyledLoadingPlaceholder active={active}>\n        Loading\n      </StyledLoadingPlaceholder>\n    );\n\n  return (\n    <Container\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      {Tag}\n      {hover && (\n        <>\n          {thumbnails.length > 1 && (\n            <StyledRemoveButton\n              onClick={() => {\n                removeSlide(number);\n                setCurrentSlide(\n                  currentSlide === number\n                    ? number === 0\n                      ? number\n                      : number - 1\n                    : currentSlide === 0\n                    ? currentSlide\n                    : currentSlide - 1\n                );\n                setThumbnails(\n                  thumbnails.filter((item, index) => index !== number)\n                );\n              }}\n            >\n              X\n            </StyledRemoveButton>\n          )}\n          <StyledAddButton\n            onClick={() => {\n              addSlide(number + 1);\n              setCurrentSlide(number + 1);\n              const first = thumbnails.slice(0, number + 1);\n              const rest = thumbnails.slice(number + 1);\n              setThumbnails([...first, \"\", ...rest]);\n            }}\n          >\n            +\n          </StyledAddButton>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Thumbnail;\n","import html2canvas from \"html2canvas\";\nimport styled from \"styled-components\";\nimport { useContext, useEffect, forwardRef } from \"react\";\n\nimport { SlidesContext } from \"../context/slides\";\nimport { DeckContext } from \"../context/deck\";\nimport { ThumbnailsContext } from \"../context/thumbnails\";\nimport Thumbnail from \"./Thumbnail\";\n\nconst Container = styled.div`\n  overflow-y: scroll;\n  white-space: nowrap;\n`;\n\nfunction Controls(_: any, ref: any) {\n  const { slides } = useContext(SlidesContext);\n  const { currentSlide } = useContext(DeckContext);\n  const { thumbnails, setThumbnails } = useContext(ThumbnailsContext);\n\n  async function update() {\n    if (ref.current) {\n      const canvas = await html2canvas(ref.current);\n      setThumbnails((currentThumbnails) =>\n        currentThumbnails.map((item, index) =>\n          index === currentSlide ? canvas.toDataURL() : item\n        )\n      );\n    }\n  }\n\n  // Update on elements change\n  useEffect(() => {\n    update();\n  }, [slides]); //eslint-disable-line\n\n  // Update when a slide is added\n  useEffect(() => {\n    if (thumbnails[currentSlide] === \"\") {\n      update();\n    }\n  }, [thumbnails]); //eslint-disable-line\n\n  return (\n    <Container>\n      {thumbnails.map((item, index) => (\n        <Thumbnail\n          key={index}\n          src={item}\n          number={index}\n          active={currentSlide === index}\n        />\n      ))}\n    </Container>\n  );\n}\n\nexport default forwardRef<HTMLDivElement>(Controls);\n","import React, { useRef, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledHeader = styled.div<{ level: number; selected: boolean }>`\n  font-size: ${({ level }) =>\n    level === 1\n      ? \"3.5em\"\n      : level === 2\n      ? \"3.2em\"\n      : level === 3\n      ? \"2.9em\"\n      : level === 4\n      ? \"2.6em\"\n      : level === 5\n      ? \"2.3em\"\n      : \"2em\"};\n\n  padding: 0.1em;\n  border: 1px solid ${({ selected }) => (selected ? \"red\" : \"rgba(0, 0, 0, 0)\")}; ;\n`;\n\nfunction Header({ slideNumber, item }: { slideNumber: number; item: Element }) {\n  const editingElement = useRef<HTMLDivElement | null>(null);\n  const [selected, setSelected] = useState(false);\n\n  const { removeElement, changeElementValue } = useContext(SlidesContext);\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n\n    if (event.target.innerText === \"\") {\n      removeElement(slideNumber, item.id);\n    } else {\n      changeElementValue(slideNumber, item.id, event.target.innerText);\n    }\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n      editingElement.current && editingElement.current.blur();\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(slideNumber, item.id);\n  }\n\n  const Tag = `h${item.level}` as \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\n\n  return (\n    <Container>\n      <StyledHeader\n        as={Tag}\n        level={item.level as number}\n        selected={selected}\n        ref={editingElement}\n        onKeyDown={checkMouseDown}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        data-id={item.id}\n        tabIndex={-1}\n      >\n        {item.value}\n      </StyledHeader>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nHeader.displayName = \"Header\";\n\nexport default Header;\n","import React, { useRef, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledParagraph = styled.p<{ selected: boolean }>`\n  font-size: 1.3em;\n  padding: 0.1em;\n  border: 1px solid ${({ selected }) => (selected ? \"red\" : \"rgba(0, 0, 0, 0)\")};\n  line-height: 1.4em;\n`;\n\nfunction Paragraph({\n  slideNumber,\n  item,\n}: {\n  slideNumber: number;\n  item: Element;\n}) {\n  const [selected, setSelected] = useState(false);\n  const editingElement = useRef<HTMLDivElement | null>(null);\n\n  const { removeElement, changeElementValue } = useContext(SlidesContext);\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n    if (event.target.innerText === \"\") {\n      removeElement(slideNumber, item.id);\n    } else {\n      changeElementValue(slideNumber, item.id, event.target.innerText);\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(slideNumber, item.id);\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n      editingElement.current && editingElement.current.blur();\n    }\n  }\n\n  return (\n    <Container>\n      <StyledParagraph\n        selected={selected}\n        onKeyDown={checkMouseDown}\n        ref={editingElement}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        tabIndex={-1}\n        data-id={item.id}\n      >\n        {item.value}\n      </StyledParagraph>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nParagraph.displayName = \"Paragraph\";\n\nexport default Paragraph;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { DeckContext } from \"../../context/deck\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { Element } from \"../../types\";\n\nconst StyledImage = styled.img<{ selected: boolean; loadingState: boolean }>`\n  font-size: 1.3em;\n  padding: 0.5em;\n  border: 1px solid ${({ selected }) => (selected ? \"red\" : \"rgba(0, 0, 0, 0)\")};\n  background: ${({ loadingState }) =>\n    loadingState ? \"rgba(0, 0, 0, 0.1)\" : \"none\"};\n`;\n\nfunction Image({ slideNumber, item }: { slideNumber: number; item: Element }) {\n  const [selected, setSelected] = useState(false);\n\n  const { loading, setLoading } = useContext(DeckContext);\n  const { removeElement } = useContext(SlidesContext);\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    setSelected(false);\n  }\n  function edit() {\n    setSelected(true);\n  }\n\n  function keydown(event: React.KeyboardEvent<HTMLImageElement>) {\n    if (event.key === \"Backspace\") {\n      event.preventDefault();\n      removeElement(slideNumber, item.id);\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true);\n  }, []); // eslint-disable-line\n\n  return (\n    <div\n      onBlur={finishEditing}\n      onKeyDown={keydown}\n      onFocus={edit}\n      tabIndex={-1}\n    >\n      <StyledImage\n        onLoad={() => setLoading(false)}\n        loadingState={loading}\n        selected={selected}\n        src={item.value}\n        alt={item.value}\n        data-id={item.id}\n      />\n    </div>\n  );\n}\n\nImage.displayName = \"Image\";\n\nexport default Image;\n","import React, { useRef, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledList = styled.ul<{ selected: boolean }>`\n  white-space: pre-wrap;\n  font-size: 1.3em;\n  padding: 0.1em;\n  padding-left: 1em; // fix lists' left padding\n  border: 1px solid ${({ selected }) => (selected ? \"red\" : \"rgba(0, 0, 0, 0)\")};\n\n  line-height: 1.4em;\n  list-style-type: circle;\n\n  li {\n    padding-bottom: 0.5em;\n  }\n`;\n\nfunction List({ slideNumber, item }: { slideNumber: number; item: Element }) {\n  const [selected, setSelected] = useState(false);\n  const editingElement = useRef<HTMLUListElement | null>(null);\n\n  const { removeElement, changeElementValue } = useContext(SlidesContext);\n\n  function editHeading() {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLUListElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n    if (event.target.innerText === \"\") {\n      removeElement(slideNumber, item.id);\n    } else {\n      changeElementValue(slideNumber, item.id, event.target.innerText);\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(slideNumber, item.id);\n  }\n\n  function sanitizeHTML(text: string) {\n    var element = document.createElement(\"div\");\n    element.innerText = text;\n    return element.innerHTML;\n  }\n\n  return (\n    <Container>\n      <StyledList\n        selected={selected}\n        ref={editingElement}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        tabIndex={-1}\n        data-id={item.id}\n        dangerouslySetInnerHTML={{\n          // React can't deal with a content editable list and manage its children\n          __html: item.value\n            .split(\"\\n\")\n            .map((item) => `<li>${sanitizeHTML(item)}</li>`)\n            .join(\"\"),\n        }}\n      ></StyledList>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nList.displayName = \"List\";\n\nexport default List;\n","import React, { useRef, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledBlockquote = styled.blockquote<{ selected: boolean }>`\n  font-size: 1.3em;\n  line-height: 1.4em;\n  padding: 0.1em;\n  border: 1px solid ${({ selected }) => (selected ? \"red\" : \"rgba(0, 0, 0, 0)\")};\n  quotes: \"“\" \"”\" \"‘\" \"’\";\n\n  &:before {\n    color: #ccc;\n    content: open-quote;\n    font-size: 4em;\n    line-height: 0.1em;\n    margin-right: 0.25em;\n    vertical-align: -0.4em;\n  }\n`;\n\nfunction Blockquote({\n  slideNumber,\n  item,\n}: {\n  slideNumber: number;\n  item: Element;\n}) {\n  const [selected, setSelected] = useState(false);\n  const editingElement = useRef<HTMLDivElement | null>(null);\n\n  const { removeElement, changeElementValue } = useContext(SlidesContext);\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n    if (event.target.innerText === \"\") {\n      removeElement(slideNumber, item.id);\n    } else {\n      changeElementValue(slideNumber, item.id, event.target.innerText);\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(slideNumber, item.id);\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n      editingElement.current && editingElement.current.blur();\n    }\n  }\n\n  return (\n    <Container>\n      <StyledBlockquote\n        selected={selected}\n        onKeyDown={checkMouseDown}\n        ref={editingElement}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        tabIndex={-1}\n        data-id={item.id}\n      >\n        {item.value}\n      </StyledBlockquote>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nBlockquote.displayName = \"Blockquote\";\n\nexport default Blockquote;\n","import React, { useRef, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  flex: 1;\n\n  text-align: center;\n\n  &:last-child {\n    text-align: right;\n  }\n  &:first-child {\n    text-align: left;\n  }\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledFooterItem = styled.div<{ selected: boolean }>`\n  font-size: 0.9em;\n  line-height: 1.4em;\n  padding: 0.5em;\n  border: 1px solid ${({ selected }) => (selected ? \"red\" : \"rgba(0, 0, 0, 0)\")}; ;\n`;\n\nfunction FooterItem({\n  slideNumber,\n  item,\n}: {\n  slideNumber: number;\n  item: Element;\n}) {\n  const [selected, setSelected] = useState(false);\n  const editingElement = useRef<HTMLDivElement | null>(null);\n\n  const { removeElement, changeElementValue } = useContext(SlidesContext);\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n    if (event.target.innerText === \"\") {\n      removeElement(slideNumber, item.id);\n    } else {\n      changeElementValue(slideNumber, item.id, event.target.innerText);\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(slideNumber, item.id);\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n      editingElement.current && editingElement.current.blur();\n    }\n  }\n\n  return (\n    <Container>\n      <StyledFooterItem\n        selected={selected}\n        onKeyDown={checkMouseDown}\n        ref={editingElement}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        tabIndex={-1}\n        data-id={item.id}\n      >\n        {item.value}\n      </StyledFooterItem>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nFooterItem.displayName = \"FooterItem\";\n\nexport default FooterItem;\n","import { useLayoutEffect, useState, useContext, forwardRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../context/slides\";\nimport { DeckContext } from \"../context/deck\";\n\nimport Header from \"./elements/Header\";\nimport Paragraph from \"./elements/Paragraph\";\nimport Image from \"./elements/Image\";\nimport List from \"./elements/List\";\nimport Blockquote from \"./elements/Blockquote\";\nimport FooterItem from \"./elements/FooterItem\";\n\nimport { renderersMap } from \"../renderers\";\n\nconst SizeWrapper = styled.div<{ scaleSize: number }>`\n  width: 960px;\n  height: 700px;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  transform-origin: center center;\n  transform: ${({ scaleSize }) => `scale(${scaleSize})`};\n`;\n\nconst StyledSlide = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  background: white;\n  width: 100%;\n  height: 100%;\n\n  a {\n    color: #51c2f7;\n  }\n\n  *:focus {\n    outline: none;\n  }\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex: 1;\n`;\n\nfunction Slide({ present }: { present: boolean }, ref: any) {\n  const { slides } = useContext(SlidesContext);\n  const { currentSlide, size } = useContext(DeckContext);\n  const [scale, setScale] = useState(1);\n\n  const slide = slides[currentSlide];\n  const Wrapper = renderersMap[slide.state];\n\n  function updateSize() {\n    // scale to fit window width and/or height\n    const scale = Math.min(\n      window.innerWidth / size[0],\n      window.innerHeight / size[1]\n    );\n    setScale(scale);\n  }\n  useLayoutEffect(() => {\n    window.addEventListener(\"resize\", updateSize);\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []); // eslint-disable-line\n\n  return (\n    <SizeWrapper scaleSize={scale > 1 && !present ? 1 : scale}>\n      <StyledSlide className={slide.state} ref={ref}>\n        <Wrapper>\n          {slide.elements\n            .filter((item) => item.type !== \"footer\")\n            .map((item) => {\n              switch (item.type) {\n                case \"heading\": {\n                  return (\n                    <Header\n                      slideNumber={currentSlide}\n                      key={item.id}\n                      item={item}\n                    />\n                  );\n                }\n                case \"paragraph\": {\n                  return (\n                    <Paragraph\n                      slideNumber={currentSlide}\n                      key={item.id}\n                      item={item}\n                    />\n                  );\n                }\n                case \"image\": {\n                  return (\n                    <Image\n                      slideNumber={currentSlide}\n                      key={item.id}\n                      item={item}\n                    />\n                  );\n                }\n                case \"list\": {\n                  return (\n                    <List\n                      slideNumber={currentSlide}\n                      key={item.id}\n                      item={item}\n                    />\n                  );\n                }\n                case \"blockquote\": {\n                  return (\n                    <Blockquote\n                      slideNumber={currentSlide}\n                      key={item.id}\n                      item={item}\n                    />\n                  );\n                }\n                default: {\n                  return <></>;\n                }\n              }\n            })}\n        </Wrapper>\n        <Footer>\n          {slide.elements\n            .filter((item) => item.type === \"footer\")\n            .map((item) => (\n              <FooterItem\n                key={item.id}\n                item={item}\n                slideNumber={currentSlide}\n              />\n            ))}\n        </Footer>\n      </StyledSlide>\n    </SizeWrapper>\n  );\n}\n\nexport default forwardRef<HTMLDivElement, { present: boolean }>(Slide);\n","import { useContext } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport { DeckContext } from \"../context/deck\";\n\nconst colours = [\n  \"#e3fafc\",\n  \"#c5f6fa\",\n  \"#99e9f2\",\n  \"#66d9e8\",\n  \"#3bc9db\",\n  \"#22b8cf\",\n  \"#15aabf\",\n  \"#1098ad\",\n  \"#0c8599\",\n  \"#0b7285\",\n];\n\nconst StyledLoadingBar = styled.div<{ loading: boolean }>`\n  height: 2px;\n  width: 100%;\n  ${({ loading }) =>\n    loading\n      ? `background-image: linear-gradient(to right, ${colours.join(\",\")})`\n      : \"background: #e3fafc\"};\n  animation: ${({ loading }) =>\n    loading ? \"colorAnimation 0.7s infinite\" : \"none\"};\n\n  @keyframes colorAnimation {\n    ${colours\n      .reduce(\n        (initial, _, index) => {\n          const current = initial[index];\n          const first = current.slice(0, -1);\n          const last = current.slice(-1);\n          return [...initial, [...last, ...first]];\n        },\n        [colours]\n      )\n      .map(\n        (item, index) => `\n    ${(100 * index) / colours.length}% {\n      background-image: linear-gradient(\n        to right,\n        ${item.join(\",\")}\n      );\n    }\n    `\n      )}\n  }\n`;\n\nfunction LoadingBar() {\n  const { loading } = useContext(DeckContext);\n  return <StyledLoadingBar loading={loading} />;\n}\n\nexport default LoadingBar;\n","import screenfull from \"screenfull\";\nimport { useRef, useEffect } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nimport { SlidesContext, useSlidesState } from \"../context/slides\";\nimport { ThumbnailsContext, useThumbnailsState } from \"../context/thumbnails\";\nimport { DeckContext, useDeckState } from \"../context/deck\";\n\nimport Elements from \"./Elements\";\nimport Controls from \"./Controls\";\nimport Slide from \"./Slide\";\nimport LoadingBar from \"./LoadingBar\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  html,\n  body {\n    height: 100%;\n  }\n\n  body {\n    font-family: \"Roboto\", sans-serif;\n  }\n\n  b {\n    font-weight: bold;\n  }\n\n  i {\n    font-decoration: italic;\n  }\n`;\n\nconst Wrapper = styled.div`\n  background: #eee;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst SlideWrapper = styled.div`\n  flex: 1;\n`;\n\nfunction App() {\n  const slideWrapperRef = useRef<HTMLDivElement>(null);\n\n  const {\n    slides,\n    setSlides,\n    addElement,\n    removeSlide,\n    removeElement,\n    changeElementValue,\n    addSlide,\n  } = useSlidesState();\n\n  const { thumbnails, setThumbnails } = useThumbnailsState();\n  const {\n    currentSlide,\n    setCurrentSlide,\n    present,\n    setPresent,\n    size,\n    setSize,\n    loading,\n    setLoading,\n  } = useDeckState();\n\n  useEffect(() => {\n    const callback = () => {\n      if (screenfull.isEnabled) {\n        if (!screenfull.isFullscreen) {\n          setPresent(false);\n        }\n      }\n    };\n    if (screenfull.isEnabled) {\n      screenfull.on(\"change\", callback);\n    }\n    const unsubscribe = () => {\n      if (screenfull.isEnabled) {\n        screenfull.off(\"change\", callback);\n      }\n    };\n    return unsubscribe;\n  }, [present]); // eslint-disable-line\n\n  useEffect(() => {\n    const callback = (event: any) => {\n      if (event.code === \"ArrowLeft\") {\n        setCurrentSlide(currentSlide === 0 ? 0 : currentSlide - 1);\n      }\n      if (event.code === \"ArrowRight\") {\n        const totalSlides = slides.length;\n        setCurrentSlide(\n          currentSlide === totalSlides - 1 ? currentSlide : currentSlide + 1\n        );\n      }\n    };\n\n    window.addEventListener(\"keydown\", callback);\n\n    return () => window.removeEventListener(\"keydown\", callback);\n  }, [currentSlide, slides]); // eslint-disable-line\n\n  return (\n    <ThumbnailsContext.Provider value={{ thumbnails, setThumbnails }}>\n      <DeckContext.Provider\n        value={{\n          loading,\n          setLoading,\n          currentSlide,\n          setCurrentSlide,\n          present,\n          setPresent,\n          size,\n          setSize,\n        }}\n      >\n        <SlidesContext.Provider\n          value={{\n            slides,\n            setSlides,\n            addElement,\n            removeElement,\n            changeElementValue,\n            removeSlide,\n            addSlide,\n          }}\n        >\n          <GlobalStyle />\n          <LoadingBar />\n          <Wrapper>\n            {!present && (\n              <Elements\n                togglePresent={() => {\n                  setPresent(!present);\n                  if (screenfull.isEnabled) {\n                    screenfull.request();\n                  }\n                }}\n              />\n            )}\n            <SlideWrapper>\n              <Slide present={present} ref={slideWrapperRef} />\n            </SlideWrapper>\n            {!present && <Controls ref={slideWrapperRef} />}\n          </Wrapper>\n        </SlidesContext.Provider>\n      </DeckContext.Provider>\n    </ThumbnailsContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}