{"version":3,"sources":["builder.ts","context.ts","components/Elements.tsx","components/Thumbnail.tsx","components/Controls.tsx","components/elements/Header.tsx","components/elements/Paragraph.tsx","components/elements/Image.tsx","components/elements/List.tsx","components/elements/Blockquote.tsx","renderers/index.tsx","renderers/singleHeader.tsx","renderers/twoHeaders.tsx","renderers/normal.tsx","renderers/headerSingleParagraph.tsx","renderers/headerCodeblock.tsx","renderers/headerManyParagraphsImage.tsx","renderers/headerParagraphImage.tsx","renderers/image.tsx","renderers/manyImages.tsx","renderers/headerImage.tsx","renderers/headerList.tsx","renderers/blockquote.tsx","renderers/headerManyParagraphs.tsx","components/Slide.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["states","normal","add","type","remove","blockquote","image","manyImages","singleHeader","twoHeaders","headerList","headerImage","headerSingleParagraph","headerManyParagraphs","headerCodeblock","headerManyParagraphsImage","headerParagraphImage","Context","React","createContext","getNumbersOfSlide","getCurrentSlide","number","state","getThumbnails","addSlide","removeSlide","changeCurrentSlide","getElementsForSlide","addElement","removeElement","changeElementValue","App","useContext","currentSlide","style","position","onClick","id","Date","getTime","slide","level","value","padding","marginRight","Thumbnail","src","active","useState","hover","setHover","Tag","alt","width","height","verticalAlign","border","display","onMouseEnter","onMouseLeave","length","top","right","onMouseDown","bottom","disabled","map","item","index","Container","styled","div","StyledButton","button","Header","editingElement","useRef","selected","setSelected","editHeading","event","current","setAttribute","finishEditing","target","innerText","checkMouseDown","code","preventDefault","changeHeadingText","ref","onKeyDown","onInput","onBlur","onFocus","data-id","tabIndex","fontSize","displayName","StyledParagraph","p","Paragraph","StyledImage","img","Image","StyledList","List","text","sel","window","getSelection","range","getRangeAt","deleteContents","textNode","document","createTextNode","insertNode","setStartAfter","removeAllRanges","addRange","insertTextAtCursor","StyledBlockquote","Blockquote","children","find","className","filter","mainHeader","secondHeader","header","paragraph","paragraphs","itemSize","flex","list","StyledSlide","Slide","_","Wrapper","renderers","forwardRef","GlobalStyle","createGlobalStyle","setCurrentSlide","thumbnails","setThumbnails","elements","setElements","slideState","setSlideState","a","nextState","useEffect","html2canvas","canvas","toDataURL","update","useSlideState","Provider","Elements","Controls","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.16b75088.chunk.js","sourcesContent":["import { State } from \"./types\";\n\nexport const states: Record<State, any> = {\n  normal: {\n    add: (type: string) => {\n      if (type === \"heading\") return \"singleHeader\";\n      if (type === \"image\") return \"image\";\n      if (type === \"blockquote\") return \"blockquote\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n  blockquote: {\n    add: (type: string) => {\n      if (type === \"paragraph\") return \"blockquote\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n  image: {\n    add: (type: string) => {\n      if (type === \"image\") return \"manyImages\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n  manyImages: {\n    add: (type: string) => {\n      if (type === \"image\") return \"manyImages\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n  singleHeader: {\n    add: (type: string) => {\n      if (type === \"heading\") return \"twoHeaders\";\n      if (type === \"paragraph\") return \"headerSingleParagraph\";\n      if (type === \"list\") return \"headerList\";\n      if (type === \"image\") return \"headerImage\";\n      if (type === \"code_block\") return \"headerCodeblock\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n  twoHeaders: {\n    add: (type: string) => {\n      return \"normal\";\n    },\n    remove: (type: string) => {\n      return \"singleHeader\";\n    },\n  },\n  headerList: {\n    add: (type: string) => {\n      return \"normal\";\n    },\n    remove: (type: string) => {\n      return \"singleHeader\";\n    },\n  },\n  headerImage: {\n    add: (type: string) => {\n      return \"normal\";\n    },\n    remove: (type: string) => {\n      if (type === \"image\") return \"singleHeader\";\n      if (type === \"heading\") return \"image\";\n    },\n  },\n  headerSingleParagraph: {\n    add: (type: string) => {\n      if (type === \"paragraph\") return \"headerManyParagraphs\";\n      if (type === \"image\") return \"headerParagraphImage\";\n    },\n    remove: (type: string) => {\n      if (type === \"heading\") return \"normal\";\n      if (type === \"paragraph\") return \"singleHeader\";\n    },\n  },\n  headerManyParagraphs: {\n    add: (type: string) => {\n      if (type === \"paragraph\") return \"headerManyParagraphs\";\n      if (type === \"image\") return \"headerManyParagraphsImage\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n  headerCodeblock: {\n    add: (type: string) => {\n      if (type === \"paragraph\") return \"headerManyParagraphs\";\n      if (type === \"image\") return \"headerManyParagraphsImage\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n  headerManyParagraphsImage: {\n    add: (type: string) => {\n      if (type === \"paragraph\") return \"headerManyParagraphs\";\n      if (type === \"image\") return \"headerManyParagraphsImage\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n  headerParagraphImage: {\n    add: (type: string) => {\n      if (type === \"paragraph\") return \"headerManyParagraphs\";\n      if (type === \"image\") return \"headerManyParagraphsImage\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n};\n","import html2canvas from \"html2canvas\";\nimport React, { useState, useRef, useEffect } from \"react\";\n\nimport { Slide, Element, State } from \"./types\";\n\nimport { states } from \"./builder\";\n\nexport function useSlideState() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [thumbnails, setThumbnails] = useState<string[]>([\"\"]);\n  const [elements, setElements] = useState<Element[]>([]);\n  const [slideState, setSlideState] = useState<State[]>([\"normal\"]);\n\n  useEffect(() => {\n    async function update() {\n      if (ref.current) {\n        const canvas = await html2canvas(ref.current);\n        setThumbnails(\n          thumbnails.map((item, index) =>\n            index === currentSlide ? canvas.toDataURL() : item\n          )\n        );\n      }\n    }\n    update();\n  }, [currentSlide, elements]); // eslint-disable-line\n\n  function addSlide() {\n    setSlideState([...slideState, \"normal\"]);\n    setCurrentSlide(currentSlide + 1);\n    setThumbnails([...thumbnails, \"\"]);\n  }\n  function removeSlide(number: number) {\n    setElements([\n      ...elements\n        // remove all elements of that slide\n        .filter((item) => item.slide !== number)\n        // elements that were after that slide, move them exactly one slide before\n        .map((item) =>\n          item.slide > number ? { ...item, slide: item.slide - 1 } : item\n        ),\n    ]);\n    // remove the state of that slide\n    setSlideState([...slideState.filter((item, index) => index !== number)]);\n    setCurrentSlide(\n      currentSlide === thumbnails.length - 1 ? currentSlide - 1 : currentSlide\n    );\n    setThumbnails(thumbnails.filter((item, index) => index !== currentSlide));\n  }\n\n  async function addElement(item: Element) {\n    setElements([...elements, item]);\n\n    if (states[slideState[item.slide]]) {\n      const nextState = states[slideState[item.slide]].add(item.type);\n      if (nextState) {\n        setSlideState(\n          slideState.map((state, index) =>\n            index === item.slide ? nextState : state\n          )\n        );\n      }\n    } else {\n      setSlideState(\n        slideState.map((state, index) =>\n          index === item.slide ? \"normal\" : state\n        )\n      );\n    }\n  }\n\n  function removeElement(id: number) {\n    const item = elements.find((item) => item.id === id);\n\n    if (!item) {\n      return;\n    }\n\n    setElements([...elements.filter((item) => item.id !== id)]);\n\n    if (states[slideState[item.slide]]) {\n      const nextState = states[slideState[item.slide]].remove(\n        item && item.type\n      );\n      if (nextState) {\n        setSlideState(\n          slideState.map((state, index) =>\n            index === item.slide ? nextState : state\n          )\n        );\n      }\n    } else {\n      setSlideState(\n        slideState.map((state, index) =>\n          index === item.slide ? \"normal\" : state\n        )\n      );\n    }\n  }\n\n  function changeElementValue(id: number, value: string) {\n    setElements(\n      elements.map((item) => {\n        if (item.id === id) {\n          return { ...item, value };\n        }\n\n        return item;\n      })\n    );\n  }\n\n  function changeCurrentSlide(number: number) {\n    setCurrentSlide(number);\n  }\n\n  function getElementsForSlide(id: number) {\n    return elements.filter((item) => item.slide === id);\n  }\n\n  function getThumbnails() {\n    return thumbnails;\n  }\n\n  function getCurrentSlide() {\n    return {\n      number: currentSlide,\n      state: slideState[currentSlide],\n    };\n  }\n\n  function getNumbersOfSlide() {\n    return slideState.length;\n  }\n\n  return {\n    getNumbersOfSlide,\n    getThumbnails,\n    getCurrentSlide,\n    ref,\n    addElement,\n    removeElement,\n    changeElementValue,\n    changeCurrentSlide,\n    getElementsForSlide,\n    addSlide,\n    removeSlide,\n  };\n}\n\nexport const Context = React.createContext<{\n  getNumbersOfSlide: () => number;\n  getCurrentSlide: () => Slide;\n  getThumbnails: () => string[];\n  getElementsForSlide: (id: number) => Element[];\n  removeSlide: (id: number) => void;\n  addSlide: () => void;\n  addElement: (item: Element) => void;\n  removeElement: (id: number) => void;\n  changeElementValue: (id: number, value: string) => void;\n  changeCurrentSlide: (number: number) => void;\n}>({\n  getNumbersOfSlide: () => 1,\n  getCurrentSlide: () => ({ number: 0, state: \"normal\" }),\n  getThumbnails: () => [],\n  addSlide: () => {},\n  removeSlide: () => {},\n  changeCurrentSlide: () => {},\n  getElementsForSlide: () => [],\n  addElement: () => {},\n  removeElement: () => {},\n  changeElementValue: () => {},\n});\n","import { useContext } from \"react\";\n\nimport { Context } from \"../context\";\n\nfunction App() {\n  const { addElement, getCurrentSlide } = useContext(Context);\n\n  const currentSlide = getCurrentSlide();\n  return (\n    <div style={{ position: \"absolute\" }}>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"heading\",\n            level: 1,\n            value: \"Heading 1\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        H1\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"heading\",\n            level: 2,\n            value: \"Heading 2\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        H2\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"heading\",\n            level: 3,\n            value: \"Heading 3\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        H3\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"heading\",\n            level: 4,\n            value: \"Heading 4\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        H4\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"heading\",\n            level: 5,\n            value: \"Heading 5\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        H5\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"heading\",\n            level: 6,\n            value: \"Heading 6\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        H6\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"paragraph\",\n            value:\n              \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        P\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"image\",\n            value: \"https://via.placeholder.com/500x500\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        Img\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"list\",\n            value: \" · hello there\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        Li\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"blockquote\",\n            value: \"A wise man once said...\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        Q\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","import { useContext, useState } from \"react\";\n\nimport { Context } from \"../context\";\n\nfunction Thumbnail({\n  src,\n  active,\n  number,\n}: {\n  src: string;\n  active: boolean;\n  number: number;\n}) {\n  const { removeSlide, getThumbnails } = useContext(Context);\n  const [hover, setHover] = useState(false);\n\n  const Tag =\n    src !== \"\" ? (\n      <img\n        src={src}\n        alt={`Slide`}\n        style={{\n          width: \"100px\",\n          height: \"100px\",\n          verticalAlign: \"middle\",\n          border: active ? \"1px solid red\" : \"none\",\n        }}\n      />\n    ) : (\n      <div\n        style={{\n          display: \"inline-block\",\n          width: \"100px\",\n          height: \"100px\",\n          verticalAlign: \"middle\",\n          border: active ? \"1px solid red\" : \"none\",\n        }}\n      >\n        Loading\n      </div>\n    );\n\n  return (\n    <span\n      style={{ position: \"relative\", display: \"inline-block\" }}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      {Tag}\n      {hover && getThumbnails().length > 1 && (\n        <button\n          style={{ position: \"absolute\", top: 0, right: 0 }}\n          onMouseDown={() => {\n            removeSlide(number);\n          }}\n        >\n          X\n        </button>\n      )}\n    </span>\n  );\n}\n\nexport default Thumbnail;\n","import { useContext } from \"react\";\n\nimport { Context } from \"../context\";\nimport Thumbnail from \"./Thumbnail\";\n\nfunction App() {\n  const {\n    changeCurrentSlide,\n    getCurrentSlide,\n    addSlide,\n    getThumbnails,\n    getNumbersOfSlide,\n  } = useContext(Context);\n\n  const currentSlide = getCurrentSlide();\n\n  return (\n    <div style={{ position: \"absolute\", bottom: 0 }}>\n      <button\n        onClick={() => {\n          changeCurrentSlide(currentSlide.number - 1);\n        }}\n        disabled={currentSlide.number === 0}\n        style={{ height: \"100px\" }}\n      >\n        {\"<\"}\n      </button>\n      {getThumbnails().map((item, index) => (\n        <Thumbnail\n          key={index}\n          src={item}\n          number={index}\n          active={currentSlide.number === index}\n        />\n      ))}\n      <button\n        style={{ height: \"100px\" }}\n        onClick={() => {\n          if (currentSlide.number === getNumbersOfSlide() - 1) {\n            addSlide();\n          } else {\n            changeCurrentSlide(currentSlide.number + 1);\n          }\n        }}\n      >\n        {currentSlide.number === getNumbersOfSlide() - 1 ? \"+\" : \">\"}\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nfunction Header({\n  level,\n  item,\n  removeElement,\n  changeElementValue,\n}: {\n  level: number;\n  item: Element;\n  removeElement: (id: number) => void;\n  changeElementValue: (id: number, value: string) => void;\n}) {\n  const editingElement = useRef<HTMLDivElement | null>(null);\n  const [selected, setSelected] = useState(false);\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n\n    if (event.target.innerText === \"\") {\n      removeElement(item.id);\n    } else {\n      changeElementValue(item.id, event.target.innerText);\n    }\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(item.id);\n  }\n\n  const Tag =\n    level === 1 ? (\n      <h1\n        ref={editingElement}\n        onKeyDown={checkMouseDown}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        data-id={item.id}\n        tabIndex={-1}\n        style={{\n          fontSize: \"5em\",\n          padding: \"5px\",\n          border: `${selected ? \"1px solid red\" : \"none\"}`,\n        }}\n      >\n        {item.value}\n      </h1>\n    ) : level === 2 ? (\n      <h2\n        ref={editingElement}\n        onKeyDown={checkMouseDown}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        data-id={item.id}\n        tabIndex={-1}\n        style={{\n          fontSize: \"4.5em\",\n          padding: \"5px\",\n          border: `${selected ? \"1px solid red\" : \"none\"}`,\n        }}\n      >\n        {item.value}\n      </h2>\n    ) : level === 3 ? (\n      <h3\n        ref={editingElement}\n        onKeyDown={checkMouseDown}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        data-id={item.id}\n        tabIndex={-1}\n        style={{\n          fontSize: \"4em\",\n          padding: \"5px\",\n          border: `${selected ? \"1px solid red\" : \"none\"}`,\n        }}\n      >\n        {item.value}\n      </h3>\n    ) : (\n      <h4\n        ref={editingElement}\n        onKeyDown={checkMouseDown}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        data-id={item.id}\n        tabIndex={-1}\n        style={{\n          fontSize: \"3em\",\n          padding: \"5px\",\n          border: `${selected ? \"1px solid red\" : \"none\"}`,\n        }}\n      >\n        {item.value}\n      </h4>\n    );\n\n  return (\n    <Container>\n      {Tag}\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nHeader.displayName = \"Header\";\n\nexport default Header;\n","import React, { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledParagraph = styled.p<{ selected: boolean }>`\n  font-size: 1.3em;\n  padding: 5px;\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n`;\n\nfunction Paragraph({\n  item,\n  removeElement,\n  changeElementValue,\n}: {\n  item: Element;\n  removeElement: (id: number) => void;\n  changeElementValue: (id: number, value: string) => void;\n}) {\n  const [selected, setSelected] = useState(false);\n  const editingElement = useRef<HTMLDivElement | null>(null);\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n    if (event.target.innerText === \"\") {\n      removeElement(item.id);\n    } else {\n      changeElementValue(item.id, event.target.innerText);\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(item.id);\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n\n  return (\n    <Container>\n      <StyledParagraph\n        selected={selected}\n        onKeyDown={checkMouseDown}\n        ref={editingElement}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        tabIndex={-1}\n        data-id={item.id}\n      >\n        {item.value}\n      </StyledParagraph>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nParagraph.displayName = \"Paragraph\";\n\nexport default Paragraph;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledImage = styled.img<{ selected: boolean }>`\n  font-size: 1.3em;\n  padding: 5px;\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n`;\n\nfunction Image({\n  item,\n  removeElement,\n}: {\n  item: Element;\n  removeElement: (id: number) => void;\n}) {\n  const [selected, setSelected] = useState(false);\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    setSelected(false);\n  }\n  function edit(event: React.FocusEvent<HTMLDivElement>) {\n    setSelected(true);\n  }\n\n  function remove() {\n    removeElement(item.id);\n  }\n\n  return (\n    <Container>\n      <StyledImage\n        selected={selected}\n        src={item.value}\n        alt={item.value}\n        onBlur={finishEditing}\n        onFocus={edit}\n        tabIndex={-1}\n        data-id={item.id}\n      />\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nImage.displayName = \"Image\";\n\nexport default Image;\n","import React, { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledList = styled.p<{ selected: boolean }>`\n  white-space: pre;\n  font-size: 1.3em;\n  padding: 5px;\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n`;\n\nfunction List({\n  item,\n  removeElement,\n  changeElementValue,\n}: {\n  item: Element;\n  removeElement: (id: number) => void;\n  changeElementValue: (id: number, value: string) => void;\n}) {\n  const [selected, setSelected] = useState(false);\n  const editingElement = useRef<HTMLDivElement | null>(null);\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n    if (event.target.innerText === \"\") {\n      removeElement(item.id);\n    } else {\n      changeElementValue(item.id, event.target.innerText);\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(item.id);\n  }\n\n  function insertTextAtCursor(text: string) {\n    const sel = window.getSelection();\n    if (!sel) {\n      return;\n    }\n    const range = sel.getRangeAt(0);\n    range.deleteContents();\n    const textNode = document.createTextNode(text);\n    range.insertNode(textNode);\n    range.setStartAfter(textNode);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n      if (editingElement.current) {\n        insertTextAtCursor(\"\\n · \");\n      }\n    }\n  }\n\n  return (\n    <Container>\n      <StyledList\n        selected={selected}\n        onKeyDown={checkMouseDown}\n        ref={editingElement}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        tabIndex={-1}\n        data-id={item.id}\n      >\n        {item.value}\n      </StyledList>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nList.displayName = \"List\";\n\nexport default List;\n","import React, { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledBlockquote = styled.blockquote<{ selected: boolean }>`\n  font-size: 1.3em;\n  padding: 50px;\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n\n  background: #f9f9f9;\n\n  &:before {\n    color: #ccc;\n    content: open-quote;\n    font-size: 4em;\n    line-height: 0.1em;\n    margin-right: 0.25em;\n    vertical-align: -0.4em;\n  }\n\n  p {\n    display: inline;\n  }\n`;\n\nfunction Blockquote({\n  item,\n  removeElement,\n  changeElementValue,\n}: {\n  item: Element;\n  removeElement: (id: number) => void;\n  changeElementValue: (id: number, value: string) => void;\n}) {\n  const [selected, setSelected] = useState(false);\n  const editingElement = useRef<HTMLDivElement | null>(null);\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n    if (event.target.innerText === \"\") {\n      removeElement(item.id);\n    } else {\n      changeElementValue(item.id, event.target.innerText);\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(item.id);\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n\n  return (\n    <Container>\n      <StyledBlockquote\n        selected={selected}\n        onKeyDown={checkMouseDown}\n        ref={editingElement}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        tabIndex={-1}\n        data-id={item.id}\n      >\n        <p>{item.value}</p>\n      </StyledBlockquote>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nBlockquote.displayName = \"Blockquote\";\n\nexport default Blockquote;\n","import { State } from \"../types\";\n\nimport SingleHeader from \"./singleHeader\";\nimport TwoHeaders from \"./twoHeaders\";\nimport Normal from \"./normal\";\nimport HeaderSingleParagraph from \"./headerSingleParagraph\";\nimport Blockquote from \"./blockquote\";\nimport HeaderManyParagraphs from \"./headerManyParagraphs\";\nimport HeaderCodeblock from \"./headerCodeblock\";\nimport HeaderManyParagraphsImage from \"./headerManyParagraphsImage\";\nimport HeaderParagraphImage from \"./headerParagraphImage\";\nimport Image from \"./image\";\nimport ManyImages from \"./manyImages\";\nimport HeaderImage from \"./headerImage\";\nimport HeaderList from \"./headerList\";\n\nconst map: Record<State, any> = {\n  singleHeader: SingleHeader,\n  twoHeaders: TwoHeaders,\n  normal: Normal,\n  headerSingleParagraph: HeaderSingleParagraph,\n  headerCodeblock: HeaderCodeblock,\n  headerManyParagraphsImage: HeaderManyParagraphsImage,\n  headerParagraphImage: HeaderParagraphImage,\n  image: Image,\n  manyImages: ManyImages,\n  headerImage: HeaderImage,\n  headerList: HeaderList,\n  blockquote: Blockquote,\n  headerManyParagraphs: HeaderManyParagraphs,\n};\n\nexport default map;\n","import \"./singleHeader.scss\";\n\nexport default function SingleHeader({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n\n  if (!header) {\n    return <></>;\n  }\n\n  return <div className=\"container\">{children}</div>;\n}\n","import \"./twoHeaders.scss\";\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const [mainHeader, secondHeader] = children.filter(\n    (item) => item.type.displayName === \"Header\"\n  );\n\n  if (!mainHeader) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div className=\"top\">{mainHeader}</div>\n      <div className=\"bottom\">{secondHeader}</div>\n    </>\n  );\n}\n","import \"./normal.scss\";\n\nexport default function Normal({ children }: { children: JSX.Element[] }) {\n  return <>{children}</>;\n}\n","import \"./headerSingleParagraph.scss\";\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const paragraph = children.find(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div className=\"top\">{header}</div>\n      <div className=\"bottom\">{paragraph}</div>\n    </>\n  );\n}\n","import \"./headerCodeblock.scss\";\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const paragraph = children.find(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div className=\"top\">{header}</div>\n      <div className=\"bottom\">{paragraph}</div>\n    </>\n  );\n}\n","import \"./headerManyParagraphsImage.scss\";\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const image = children.find((item) => item.type.displayName === \"Image\");\n  const paragraphs = children.filter(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div className=\"left\">\n        {header}\n        <div className=\"paragraphs\">{paragraphs}</div>\n      </div>\n      <div className=\"right\">{image}</div>\n    </>\n  );\n}\n","import \"./headerParagraphImage.scss\";\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const image = children.find((item) => item.type.displayName === \"Image\");\n  const paragraph = children.find(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div className=\"left\">\n        {header}\n        {paragraph}\n      </div>\n      <div className=\"right\">{image}</div>\n    </>\n  );\n}\n","import \"./image.scss\";\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const image = children.find((item) => item.type.displayName === \"Image\");\n\n  if (!image) {\n    return <></>;\n  }\n\n  return <>{image}</>;\n}\n","import \"./manyImages.scss\";\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const itemSize =\n    children.length >= 2 && children.length <= 4\n      ? \"50%\"\n      : children.length >= 5 && children.length <= 7\n      ? \"33.3%\"\n      : children.length > 7\n      ? \"25%\"\n      : 0;\n\n  return (\n    <>\n      {children.map((item, index) => (\n        <div key={index} className=\"image\" style={{ flex: `${itemSize}` }}>\n          {item}\n        </div>\n      ))}\n    </>\n  );\n}\n","import \"./headerImage.scss\";\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const image = children.find((item) => item.type.displayName === \"Image\");\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div className=\"top\">{header}</div>\n      <div className=\"bottom\">{image}</div>\n    </>\n  );\n}\n","import \"./headerList.scss\";\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const list = children.find((item) => item.type.displayName === \"List\");\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div className=\"top\">{header}</div>\n      <div className=\"bottom\">{list}</div>\n    </>\n  );\n}\n","import \"./blockquote.scss\";\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const blockquote = children.find(\n    (item) => item.type.displayName === \"Blockquote\"\n  );\n\n  if (!blockquote) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div className=\"top\">{blockquote}</div>\n      <div className=\"bottom\"></div>\n    </>\n  );\n}\n","import \"./headerManyParagraphs.scss\";\n\nexport default function HeaderManyParagraphs({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const paragraphs = children.filter(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div className=\"top\">{header}</div>\n      <div className=\"bottom\">{paragraphs}</div>\n    </>\n  );\n}\n","import { useContext, forwardRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Context } from \"../context\";\n\nimport Header from \"./elements/Header\";\nimport Paragraph from \"./elements/Paragraph\";\nimport Image from \"./elements/Image\";\nimport List from \"./elements/List\";\nimport Blockquote from \"./elements/Blockquote\";\n\nimport renderers from \"../renderers\";\n\nconst StyledSlide = styled.div`\n  height: 100%;\n\n  a {\n    color: #51c2f7;\n  }\n\n  @media (min-width: 12em) {\n    font-size: calc(1rem + ((1vw - 0.48rem) * 0.6944));\n    min-height: 0vw;\n  }\n  @media (min-width: 120em) {\n    font-size: 1.5rem;\n  }\n`;\n\nfunction Slide(_: any, ref: any) {\n  const {\n    getCurrentSlide,\n    getElementsForSlide,\n    removeElement,\n    changeElementValue,\n  } = useContext(Context);\n\n  const Wrapper = renderers[getCurrentSlide().state];\n\n  return (\n    <StyledSlide className={getCurrentSlide().state} ref={ref}>\n      <Wrapper>\n        {getElementsForSlide(getCurrentSlide().number).map((item) => {\n          switch (item.type) {\n            case \"heading\": {\n              return (\n                <Header\n                  key={item.id}\n                  removeElement={removeElement}\n                  changeElementValue={changeElementValue}\n                  level={item.level as number}\n                  item={item}\n                />\n              );\n            }\n            case \"paragraph\": {\n              return (\n                <Paragraph\n                  key={item.id}\n                  item={item}\n                  removeElement={removeElement}\n                  changeElementValue={changeElementValue}\n                />\n              );\n            }\n            case \"image\": {\n              return (\n                <Image\n                  key={item.id}\n                  item={item}\n                  removeElement={removeElement}\n                />\n              );\n            }\n            case \"list\": {\n              return (\n                <List\n                  key={item.id}\n                  item={item}\n                  removeElement={removeElement}\n                  changeElementValue={changeElementValue}\n                />\n              );\n            }\n            case \"blockquote\": {\n              return (\n                <Blockquote\n                  key={item.id}\n                  item={item}\n                  removeElement={removeElement}\n                  changeElementValue={changeElementValue}\n                />\n              );\n            }\n            default: {\n              return <></>;\n            }\n          }\n        })}\n      </Wrapper>\n    </StyledSlide>\n  );\n}\n\nexport default forwardRef<HTMLDivElement>(Slide);\n","import { createGlobalStyle } from \"styled-components\";\n// import reset from \"styled-reset\";\n\nimport { Context, useSlideState } from \"./context\";\n\nimport Elements from \"./components/Elements\";\nimport Controls from \"./components/Controls\";\nimport Slide from \"./components/Slide\";\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  html,\n  body {\n    height: 100%;\n  }\n\n  body {\n    font-family: \"Roboto\", sans-serif;\n  }\n  `;\n\nfunction App() {\n  const {\n    ref,\n    getCurrentSlide,\n    addElement,\n    changeCurrentSlide,\n    removeSlide,\n    removeElement,\n    changeElementValue,\n    getElementsForSlide,\n    addSlide,\n    getThumbnails,\n    getNumbersOfSlide,\n  } = useSlideState();\n\n  return (\n    <Context.Provider\n      value={{\n        getNumbersOfSlide,\n        getCurrentSlide,\n        getThumbnails,\n        addElement,\n        removeElement,\n        changeElementValue,\n        removeSlide,\n        addSlide,\n        getElementsForSlide,\n        changeCurrentSlide,\n      }}\n    >\n      <GlobalStyle />\n      <Elements />\n      <Controls />\n      <Slide ref={ref} />\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}