{"version":3,"sources":["builder.ts","context.ts","components/Elements.tsx","components/Thumbnail.tsx","components/Controls.tsx","components/elements/Header.tsx","components/elements/Paragraph.tsx","components/elements/Image.tsx","components/elements/List.tsx","components/elements/Blockquote.tsx","theme.ts","renderers/singleHeader.tsx","renderers/twoHeaders.tsx","renderers/normal.tsx","renderers/headerSingleParagraph.tsx","renderers/blockquote.tsx","renderers/headerManyParagraphs.tsx","renderers/headerCodeblock.tsx","renderers/headerManyParagraphsImage.tsx","renderers/headerParagraphImage.tsx","renderers/image.tsx","renderers/manyImages.tsx","renderers/headerImage.tsx","renderers/headerList.tsx","renderers/index.tsx","components/Slide.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["states","normal","add","type","remove","blockquote","image","manyImages","singleHeader","twoHeaders","headerList","headerImage","headerSingleParagraph","headerManyParagraphs","headerCodeblock","headerManyParagraphsImage","headerParagraphImage","Context","React","createContext","getNumbersOfSlide","getCurrentSlide","number","state","getThumbnails","addSlide","removeSlide","changeCurrentSlide","getElementsForSlide","addElement","removeElement","changeElementValue","App","useContext","currentSlide","style","onClick","id","Date","getTime","slide","level","value","padding","marginRight","Thumbnail","src","active","useState","hover","setHover","Tag","alt","width","height","verticalAlign","border","display","position","onMouseEnter","onMouseLeave","length","top","right","onMouseDown","disabled","map","item","index","Container","styled","div","StyledButton","button","Header","editingElement","useRef","selected","setSelected","editHeading","event","current","setAttribute","finishEditing","target","innerText","checkMouseDown","code","preventDefault","changeHeadingText","ref","onKeyDown","onInput","onBlur","onFocus","data-id","tabIndex","fontSize","displayName","StyledParagraph","p","Paragraph","StyledImage","img","Image","StyledList","List","text","sel","window","getSelection","range","getRangeAt","deleteContents","textNode","document","createTextNode","insertNode","setStartAfter","removeAllRanges","addRange","insertTextAtCursor","StyledBlockquote","Blockquote","colours","TopContainer","BottomContainer","LeftContainer","RightContainer","children","find","className","filter","mainHeader","secondHeader","header","paragraph","paragraphs","itemSize","flex","list","WidthWrapper","AspectRatioWrapper","StyledSlide","Slide","_","Wrapper","renderers","forwardRef","GlobalStyle","createGlobalStyle","reset","ControlsWrapper","SlideWrapper","ElementsWrapper","setCurrentSlide","thumbnails","setThumbnails","elements","setElements","slideState","setSlideState","a","nextState","useEffect","html2canvas","canvas","toDataURL","update","useSlideState","Provider","Elements","Controls","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.54cbfb52.chunk.js","sourcesContent":["import { State } from \"./types\";\n\nexport const states: Record<State, any> = {\n  normal: {\n    add: (type: string) => {\n      if (type === \"heading\") return \"singleHeader\";\n      if (type === \"image\") return \"image\";\n      if (type === \"blockquote\") return \"blockquote\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n  blockquote: {\n    add: (type: string) => {\n      if (type === \"paragraph\") return \"blockquote\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n  image: {\n    add: (type: string) => {\n      if (type === \"image\") return \"manyImages\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n  manyImages: {\n    add: (type: string) => {\n      if (type === \"image\") return \"manyImages\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n  singleHeader: {\n    add: (type: string) => {\n      if (type === \"heading\") return \"twoHeaders\";\n      if (type === \"paragraph\") return \"headerSingleParagraph\";\n      if (type === \"list\") return \"headerList\";\n      if (type === \"image\") return \"headerImage\";\n      if (type === \"code_block\") return \"headerCodeblock\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n  twoHeaders: {\n    add: (type: string) => {\n      return \"normal\";\n    },\n    remove: (type: string) => {\n      return \"singleHeader\";\n    },\n  },\n  headerList: {\n    add: (type: string) => {\n      return \"normal\";\n    },\n    remove: (type: string) => {\n      return \"singleHeader\";\n    },\n  },\n  headerImage: {\n    add: (type: string) => {\n      return \"normal\";\n    },\n    remove: (type: string) => {\n      if (type === \"image\") return \"singleHeader\";\n      if (type === \"heading\") return \"image\";\n    },\n  },\n  headerSingleParagraph: {\n    add: (type: string) => {\n      if (type === \"paragraph\") return \"headerManyParagraphs\";\n      if (type === \"image\") return \"headerParagraphImage\";\n    },\n    remove: (type: string) => {\n      if (type === \"heading\") return \"normal\";\n      if (type === \"paragraph\") return \"singleHeader\";\n    },\n  },\n  headerManyParagraphs: {\n    add: (type: string) => {\n      if (type === \"paragraph\") return \"headerManyParagraphs\";\n      if (type === \"image\") return \"headerManyParagraphsImage\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n  headerCodeblock: {\n    add: (type: string) => {\n      if (type === \"paragraph\") return \"headerManyParagraphs\";\n      if (type === \"image\") return \"headerManyParagraphsImage\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n  headerManyParagraphsImage: {\n    add: (type: string) => {\n      if (type === \"paragraph\") return \"headerManyParagraphs\";\n      if (type === \"image\") return \"headerManyParagraphsImage\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n  headerParagraphImage: {\n    add: (type: string) => {\n      if (type === \"paragraph\") return \"headerManyParagraphs\";\n      if (type === \"image\") return \"headerManyParagraphsImage\";\n    },\n    remove: (type: string) => {\n      return \"normal\";\n    },\n  },\n};\n","import html2canvas from \"html2canvas\";\nimport React, { useState, useRef, useEffect } from \"react\";\n\nimport { Slide, Element, State } from \"./types\";\n\nimport { states } from \"./builder\";\n\nexport function useSlideState() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [thumbnails, setThumbnails] = useState<string[]>([\"\"]);\n  const [elements, setElements] = useState<Element[]>([]);\n  const [slideState, setSlideState] = useState<State[]>([\"normal\"]);\n\n  useEffect(() => {\n    async function update() {\n      if (ref.current) {\n        const canvas = await html2canvas(ref.current);\n        setThumbnails(\n          thumbnails.map((item, index) =>\n            index === currentSlide ? canvas.toDataURL() : item\n          )\n        );\n      }\n    }\n    update();\n  }, [currentSlide, elements]); // eslint-disable-line\n\n  function addSlide() {\n    setSlideState([...slideState, \"normal\"]);\n    setCurrentSlide(currentSlide + 1);\n    setThumbnails([...thumbnails, \"\"]);\n  }\n  function removeSlide(number: number) {\n    setElements([\n      ...elements\n        // remove all elements of that slide\n        .filter((item) => item.slide !== number)\n        // elements that were after that slide, move them exactly one slide before\n        .map((item) =>\n          item.slide > number ? { ...item, slide: item.slide - 1 } : item\n        ),\n    ]);\n    // remove the state of that slide\n    setSlideState([...slideState.filter((item, index) => index !== number)]);\n    setCurrentSlide(\n      currentSlide === thumbnails.length - 1 ? currentSlide - 1 : currentSlide\n    );\n    setThumbnails(thumbnails.filter((item, index) => index !== currentSlide));\n  }\n\n  async function addElement(item: Element) {\n    setElements([...elements, item]);\n\n    if (states[slideState[item.slide]]) {\n      const nextState = states[slideState[item.slide]].add(item.type);\n      if (nextState) {\n        setSlideState(\n          slideState.map((state, index) =>\n            index === item.slide ? nextState : state\n          )\n        );\n      }\n    } else {\n      setSlideState(\n        slideState.map((state, index) =>\n          index === item.slide ? \"normal\" : state\n        )\n      );\n    }\n  }\n\n  function removeElement(id: number) {\n    const item = elements.find((item) => item.id === id);\n\n    if (!item) {\n      return;\n    }\n\n    setElements([...elements.filter((item) => item.id !== id)]);\n\n    if (states[slideState[item.slide]]) {\n      const nextState = states[slideState[item.slide]].remove(\n        item && item.type\n      );\n      if (nextState) {\n        setSlideState(\n          slideState.map((state, index) =>\n            index === item.slide ? nextState : state\n          )\n        );\n      }\n    } else {\n      setSlideState(\n        slideState.map((state, index) =>\n          index === item.slide ? \"normal\" : state\n        )\n      );\n    }\n  }\n\n  function changeElementValue(id: number, value: string) {\n    setElements(\n      elements.map((item) => {\n        if (item.id === id) {\n          return { ...item, value };\n        }\n\n        return item;\n      })\n    );\n  }\n\n  function changeCurrentSlide(number: number) {\n    setCurrentSlide(number);\n  }\n\n  function getElementsForSlide(id: number) {\n    return elements.filter((item) => item.slide === id);\n  }\n\n  function getThumbnails() {\n    return thumbnails;\n  }\n\n  function getCurrentSlide() {\n    return {\n      number: currentSlide,\n      state: slideState[currentSlide],\n    };\n  }\n\n  function getNumbersOfSlide() {\n    return slideState.length;\n  }\n\n  return {\n    getNumbersOfSlide,\n    getThumbnails,\n    getCurrentSlide,\n    ref,\n    addElement,\n    removeElement,\n    changeElementValue,\n    changeCurrentSlide,\n    getElementsForSlide,\n    addSlide,\n    removeSlide,\n  };\n}\n\nexport const Context = React.createContext<{\n  getNumbersOfSlide: () => number;\n  getCurrentSlide: () => Slide;\n  getThumbnails: () => string[];\n  getElementsForSlide: (id: number) => Element[];\n  removeSlide: (id: number) => void;\n  addSlide: () => void;\n  addElement: (item: Element) => void;\n  removeElement: (id: number) => void;\n  changeElementValue: (id: number, value: string) => void;\n  changeCurrentSlide: (number: number) => void;\n}>({\n  getNumbersOfSlide: () => 1,\n  getCurrentSlide: () => ({ number: 0, state: \"normal\" }),\n  getThumbnails: () => [],\n  addSlide: () => {},\n  removeSlide: () => {},\n  changeCurrentSlide: () => {},\n  getElementsForSlide: () => [],\n  addElement: () => {},\n  removeElement: () => {},\n  changeElementValue: () => {},\n});\n","import { useContext } from \"react\";\n\nimport { Context } from \"../context\";\n\nfunction App() {\n  const { addElement, getCurrentSlide } = useContext(Context);\n\n  const currentSlide = getCurrentSlide();\n  return (\n    <div style={{}}>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"heading\",\n            level: 1,\n            value: \"Heading 1\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        H1\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"heading\",\n            level: 2,\n            value: \"Heading 2\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        H2\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"heading\",\n            level: 3,\n            value: \"Heading 3\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        H3\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"heading\",\n            level: 4,\n            value: \"Heading 4\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        H4\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"heading\",\n            level: 5,\n            value: \"Heading 5\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        H5\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"heading\",\n            level: 6,\n            value: \"Heading 6\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        H6\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"paragraph\",\n            value:\n              \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        P\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"image\",\n            value: \"https://via.placeholder.com/500x500\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        Img\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"list\",\n            value: \" · hello there\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        Li\n      </button>\n      <button\n        onClick={() =>\n          addElement({\n            id: new Date().getTime(),\n            slide: currentSlide.number,\n            type: \"blockquote\",\n            value: \"A wise man once said...\",\n          })\n        }\n        style={{ padding: \"10px\", marginRight: \"5px\" }}\n      >\n        Q\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","import { useContext, useState } from \"react\";\n\nimport { Context } from \"../context\";\n\nfunction Thumbnail({\n  src,\n  active,\n  number,\n}: {\n  src: string;\n  active: boolean;\n  number: number;\n}) {\n  const { removeSlide, getThumbnails } = useContext(Context);\n  const [hover, setHover] = useState(false);\n\n  const Tag =\n    src !== \"\" ? (\n      <img\n        src={src}\n        alt={`Slide`}\n        style={{\n          width: \"100px\",\n          height: \"100px\",\n          verticalAlign: \"middle\",\n          border: active ? \"1px solid red\" : \"none\",\n        }}\n      />\n    ) : (\n      <div\n        style={{\n          display: \"inline-block\",\n          width: \"100px\",\n          height: \"100px\",\n          verticalAlign: \"middle\",\n          border: active ? \"1px solid red\" : \"none\",\n        }}\n      >\n        Loading\n      </div>\n    );\n\n  return (\n    <span\n      style={{ position: \"relative\", display: \"inline-block\" }}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      {Tag}\n      {hover && getThumbnails().length > 1 && (\n        <button\n          style={{ position: \"absolute\", top: 0, right: 0 }}\n          onMouseDown={() => {\n            removeSlide(number);\n          }}\n        >\n          X\n        </button>\n      )}\n    </span>\n  );\n}\n\nexport default Thumbnail;\n","import { useContext } from \"react\";\n\nimport { Context } from \"../context\";\nimport Thumbnail from \"./Thumbnail\";\n\nfunction App() {\n  const {\n    changeCurrentSlide,\n    getCurrentSlide,\n    addSlide,\n    getThumbnails,\n    getNumbersOfSlide,\n  } = useContext(Context);\n\n  const currentSlide = getCurrentSlide();\n\n  return (\n    <div style={{}}>\n      <button\n        onClick={() => {\n          changeCurrentSlide(currentSlide.number - 1);\n        }}\n        disabled={currentSlide.number === 0}\n        style={{ height: \"100px\" }}\n      >\n        {\"<\"}\n      </button>\n      {getThumbnails().map((item, index) => (\n        <Thumbnail\n          key={index}\n          src={item}\n          number={index}\n          active={currentSlide.number === index}\n        />\n      ))}\n      <button\n        style={{ height: \"100px\" }}\n        onClick={() => {\n          if (currentSlide.number === getNumbersOfSlide() - 1) {\n            addSlide();\n          } else {\n            changeCurrentSlide(currentSlide.number + 1);\n          }\n        }}\n      >\n        {currentSlide.number === getNumbersOfSlide() - 1 ? \"+\" : \">\"}\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nfunction Header({\n  level,\n  item,\n  removeElement,\n  changeElementValue,\n}: {\n  level: number;\n  item: Element;\n  removeElement: (id: number) => void;\n  changeElementValue: (id: number, value: string) => void;\n}) {\n  const editingElement = useRef<HTMLDivElement | null>(null);\n  const [selected, setSelected] = useState(false);\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n\n    if (event.target.innerText === \"\") {\n      removeElement(item.id);\n    } else {\n      changeElementValue(item.id, event.target.innerText);\n    }\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(item.id);\n  }\n\n  const Tag =\n    level === 1 ? (\n      <h1\n        ref={editingElement}\n        onKeyDown={checkMouseDown}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        data-id={item.id}\n        tabIndex={-1}\n        style={{\n          fontSize: \"5em\",\n          padding: \"5px\",\n          border: `${selected ? \"1px solid red\" : \"none\"}`,\n        }}\n      >\n        {item.value}\n      </h1>\n    ) : level === 2 ? (\n      <h2\n        ref={editingElement}\n        onKeyDown={checkMouseDown}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        data-id={item.id}\n        tabIndex={-1}\n        style={{\n          fontSize: \"4.5em\",\n          padding: \"5px\",\n          border: `${selected ? \"1px solid red\" : \"none\"}`,\n        }}\n      >\n        {item.value}\n      </h2>\n    ) : level === 3 ? (\n      <h3\n        ref={editingElement}\n        onKeyDown={checkMouseDown}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        data-id={item.id}\n        tabIndex={-1}\n        style={{\n          fontSize: \"4em\",\n          padding: \"5px\",\n          border: `${selected ? \"1px solid red\" : \"none\"}`,\n        }}\n      >\n        {item.value}\n      </h3>\n    ) : (\n      <h4\n        ref={editingElement}\n        onKeyDown={checkMouseDown}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        data-id={item.id}\n        tabIndex={-1}\n        style={{\n          fontSize: \"3em\",\n          padding: \"5px\",\n          border: `${selected ? \"1px solid red\" : \"none\"}`,\n        }}\n      >\n        {item.value}\n      </h4>\n    );\n\n  return (\n    <Container>\n      {Tag}\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nHeader.displayName = \"Header\";\n\nexport default Header;\n","import React, { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledParagraph = styled.p<{ selected: boolean }>`\n  font-size: 1.3em;\n  padding: 5px;\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n`;\n\nfunction Paragraph({\n  item,\n  removeElement,\n  changeElementValue,\n}: {\n  item: Element;\n  removeElement: (id: number) => void;\n  changeElementValue: (id: number, value: string) => void;\n}) {\n  const [selected, setSelected] = useState(false);\n  const editingElement = useRef<HTMLDivElement | null>(null);\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n    if (event.target.innerText === \"\") {\n      removeElement(item.id);\n    } else {\n      changeElementValue(item.id, event.target.innerText);\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(item.id);\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n\n  return (\n    <Container>\n      <StyledParagraph\n        selected={selected}\n        onKeyDown={checkMouseDown}\n        ref={editingElement}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        tabIndex={-1}\n        data-id={item.id}\n      >\n        {item.value}\n      </StyledParagraph>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nParagraph.displayName = \"Paragraph\";\n\nexport default Paragraph;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledImage = styled.img<{ selected: boolean }>`\n  font-size: 1.3em;\n  padding: 5px;\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n`;\n\nfunction Image({\n  item,\n  removeElement,\n}: {\n  item: Element;\n  removeElement: (id: number) => void;\n}) {\n  const [selected, setSelected] = useState(false);\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    setSelected(false);\n  }\n  function edit(event: React.FocusEvent<HTMLDivElement>) {\n    setSelected(true);\n  }\n\n  function remove() {\n    removeElement(item.id);\n  }\n\n  return (\n    <Container>\n      <StyledImage\n        selected={selected}\n        src={item.value}\n        alt={item.value}\n        onBlur={finishEditing}\n        onFocus={edit}\n        tabIndex={-1}\n        data-id={item.id}\n      />\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nImage.displayName = \"Image\";\n\nexport default Image;\n","import React, { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledList = styled.p<{ selected: boolean }>`\n  white-space: pre;\n  font-size: 1.3em;\n  padding: 5px;\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n`;\n\nfunction List({\n  item,\n  removeElement,\n  changeElementValue,\n}: {\n  item: Element;\n  removeElement: (id: number) => void;\n  changeElementValue: (id: number, value: string) => void;\n}) {\n  const [selected, setSelected] = useState(false);\n  const editingElement = useRef<HTMLDivElement | null>(null);\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n    if (event.target.innerText === \"\") {\n      removeElement(item.id);\n    } else {\n      changeElementValue(item.id, event.target.innerText);\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(item.id);\n  }\n\n  function insertTextAtCursor(text: string) {\n    const sel = window.getSelection();\n    if (!sel) {\n      return;\n    }\n    const range = sel.getRangeAt(0);\n    range.deleteContents();\n    const textNode = document.createTextNode(text);\n    range.insertNode(textNode);\n    range.setStartAfter(textNode);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n      if (editingElement.current) {\n        insertTextAtCursor(\"\\n · \");\n      }\n    }\n  }\n\n  return (\n    <Container>\n      <StyledList\n        selected={selected}\n        onKeyDown={checkMouseDown}\n        ref={editingElement}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        tabIndex={-1}\n        data-id={item.id}\n      >\n        {item.value}\n      </StyledList>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nList.displayName = \"List\";\n\nexport default List;\n","import React, { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledBlockquote = styled.blockquote<{ selected: boolean }>`\n  font-size: 1.3em;\n  padding: 50px;\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n  quotes: \"“\" \"”\" \"‘\" \"’\";\n\n  background: #f9f9f9;\n\n  &:before {\n    color: #ccc;\n    content: open-quote;\n    font-size: 4em;\n    line-height: 0.1em;\n    margin-right: 0.25em;\n    vertical-align: -0.4em;\n  }\n\n  p {\n    display: inline;\n  }\n`;\n\nfunction Blockquote({\n  item,\n  removeElement,\n  changeElementValue,\n}: {\n  item: Element;\n  removeElement: (id: number) => void;\n  changeElementValue: (id: number, value: string) => void;\n}) {\n  const [selected, setSelected] = useState(false);\n  const editingElement = useRef<HTMLDivElement | null>(null);\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n    if (event.target.innerText === \"\") {\n      removeElement(item.id);\n    } else {\n      changeElementValue(item.id, event.target.innerText);\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(item.id);\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n\n  return (\n    <Container>\n      <StyledBlockquote\n        selected={selected}\n        onKeyDown={checkMouseDown}\n        ref={editingElement}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        tabIndex={-1}\n        data-id={item.id}\n      >\n        <p>{item.value}</p>\n      </StyledBlockquote>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nBlockquote.displayName = \"Blockquote\";\n\nexport default Blockquote;\n","export const colours = {\n  darkText: \"#424242\",\n  lightText: \"#737373\",\n  primary: \"#4285f4\",\n};\n","import styled from \"styled-components\";\n\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  background-color: ${colours.primary};\n  color: white;\n\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport default function SingleHeader({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <div className=\"container\">{children}</div>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  background-color: ${colours.primary};\n  color: white;\n\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  .top {\n  }\n\n  .bottom {\n  }\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n`;\nconst BottomContainer = styled.div``;\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const [mainHeader, secondHeader] = children.filter(\n    (item) => item.type.displayName === \"Header\"\n  );\n\n  if (!mainHeader) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{mainHeader}</TopContainer>\n      <BottomContainer>{secondHeader}</BottomContainer>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  background-color: ${colours.primary};\n  color: white;\n  min-height: 100%;\n`;\n\nexport default function Normal({ children }: { children: JSX.Element[] }) {\n  return <Container>{children}</Container>;\n}\n","import styled from \"styled-components\";\n\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  flex: 2;\n\n  p {\n    color: ${colours.lightText};\n  }\n`;\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const paragraph = children.find(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>{paragraph}</BottomContainer>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  color: ${colours.lightText};\n\n  .top {\n  }\n\n  .bottom {\n  }\n`;\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const blockquote = children.find(\n    (item) => item.type.displayName === \"Blockquote\"\n  );\n\n  if (!blockquote) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <div className=\"top\">{blockquote}</div>\n      <div className=\"bottom\"></div>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  flex: 2;\n\n  p {\n    color: ${colours.lightText};\n  }\n`;\n\nexport default function HeaderManyParagraphs({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const paragraphs = children.filter(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>{paragraphs}</BottomContainer>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  .top {\n    background-color: ${colours.primary};\n    flex: 1;\n    display: flex;\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5 {\n      display: flex;\n      align-items: flex-end;\n      color: white;\n    }\n  }\n  .bottom {\n    align-items: center;\n    display: flex;\n    justify-content: center;\n    flex: 2;\n\n    pre {\n      display: block;\n      width: 100%;\n      height: 100%;\n\n      code {\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const paragraph = children.find(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <div className=\"top\">{header}</div>\n      <div className=\"bottom\">{paragraph}</div>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst LeftContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: ${colours.primary};\n  color: white;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    flex: 1;\n  }\n\n  .paragraphs {\n    flex: 2;\n\n    p {\n    }\n  }\n`;\nconst RightContainer = styled.div`\n  flex: 2;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n\n  img {\n    max-width: 100%;\n  }\n`;\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const image = children.find((item) => item.type.displayName === \"Image\");\n  const paragraphs = children.filter(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <LeftContainer>\n        {header}\n        <div className=\"paragraphs\">{paragraphs}</div>\n      </LeftContainer>\n      <RightContainer>{image}</RightContainer>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst LeftContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    flex: 1;\n    color: ${colours.darkText};\n  }\n\n  p {\n    color: ${colours.lightText};\n    flex: 1;\n  }\n`;\nconst RightContainer = styled.div`\n  flex: 2;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n\n  img {\n    max-width: 100%;\n  }\n`;\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const image = children.find((item) => item.type.displayName === \"Image\");\n  const paragraph = children.find(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <LeftContainer>\n        {header}\n        {paragraph}\n      </LeftContainer>\n      <RightContainer>{image}</RightContainer>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  img {\n    max-width: 100%;\n  }\n`;\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const image = children.find((item) => item.type.displayName === \"Image\");\n\n  if (!image) {\n    return <></>;\n  }\n\n  return <Container>{image}</Container>;\n}\n","import styled from \"styled-components\";\n\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  background-color: ${colours.primary};\n  color: white;\n\n  min-height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n\n  .image {\n    justify-content: center;\n    align-items: center;\n    display: flex;\n\n    img {\n      max-width: 100%;\n      height: auto;\n    }\n  }\n`;\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const itemSize =\n    children.length >= 2 && children.length <= 4\n      ? \"50%\"\n      : children.length >= 5 && children.length <= 7\n      ? \"33.3%\"\n      : children.length > 7\n      ? \"25%\"\n      : 0;\n\n  return (\n    <Container>\n      {children.map((item, index) => (\n        <div key={index} className=\"image\" style={{ flex: `${itemSize}` }}>\n          {item}\n        </div>\n      ))}\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  flex: 2;\n\n  img {\n    max-width: 100%;\n  }\n`;\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const image = children.find((item) => item.type.displayName === \"Image\");\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>{image}</BottomContainer>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  flex: 2;\n\n  ul,\n  li {\n    color: ${colours.lightText};\n    list-style-type: circle;\n    @include margin-left(1rem);\n\n    li {\n      @include margin-bottom(1rem);\n    }\n  }\n`;\n\nexport default function TwoHeaders({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const list = children.find((item) => item.type.displayName === \"List\");\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>{list}</BottomContainer>\n    </Container>\n  );\n}\n","import { State } from \"../types\";\n\nimport SingleHeader from \"./singleHeader\";\nimport TwoHeaders from \"./twoHeaders\";\nimport Normal from \"./normal\";\nimport HeaderSingleParagraph from \"./headerSingleParagraph\";\nimport Blockquote from \"./blockquote\";\nimport HeaderManyParagraphs from \"./headerManyParagraphs\";\nimport HeaderCodeblock from \"./headerCodeblock\";\nimport HeaderManyParagraphsImage from \"./headerManyParagraphsImage\";\nimport HeaderParagraphImage from \"./headerParagraphImage\";\nimport Image from \"./image\";\nimport ManyImages from \"./manyImages\";\nimport HeaderImage from \"./headerImage\";\nimport HeaderList from \"./headerList\";\n\nconst map: Record<State, any> = {\n  singleHeader: SingleHeader,\n  twoHeaders: TwoHeaders,\n  normal: Normal,\n  headerSingleParagraph: HeaderSingleParagraph,\n  headerCodeblock: HeaderCodeblock,\n  headerManyParagraphsImage: HeaderManyParagraphsImage,\n  headerParagraphImage: HeaderParagraphImage,\n  image: Image,\n  manyImages: ManyImages,\n  headerImage: HeaderImage,\n  headerList: HeaderList,\n  blockquote: Blockquote,\n  headerManyParagraphs: HeaderManyParagraphs,\n};\n\nexport default map;\n","import { useContext, forwardRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Context } from \"../context\";\n\nimport Header from \"./elements/Header\";\nimport Paragraph from \"./elements/Paragraph\";\nimport Image from \"./elements/Image\";\nimport List from \"./elements/List\";\nimport Blockquote from \"./elements/Blockquote\";\n\nimport renderers from \"../renderers\";\n\nconst WidthWrapper = styled.div`\n  width: 80vw;\n`;\n\nconst AspectRatioWrapper = styled.div`\n  width: 100%;\n  padding-bottom: 56.25%; /* 16:9 */\n  position: relative;\n`;\n\nconst StyledSlide = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  a {\n    color: #51c2f7;\n  }\n\n  // taken from https://websemantics.uk/tools/responsive-font-calculator/\n  @media (min-width: 12em) {\n    font-size: calc(1rem + ((1vw - 0.48rem) * 0.6944));\n    min-height: 0vw;\n  }\n  @media (min-width: 120em) {\n    font-size: 1.5rem;\n  }\n`;\n\nfunction Slide(_: any, ref: any) {\n  const {\n    getCurrentSlide,\n    getElementsForSlide,\n    removeElement,\n    changeElementValue,\n  } = useContext(Context);\n\n  const Wrapper = renderers[getCurrentSlide().state];\n\n  return (\n    <WidthWrapper>\n      <AspectRatioWrapper>\n        <StyledSlide className={getCurrentSlide().state} ref={ref}>\n          <Wrapper>\n            {getElementsForSlide(getCurrentSlide().number).map((item) => {\n              switch (item.type) {\n                case \"heading\": {\n                  return (\n                    <Header\n                      key={item.id}\n                      removeElement={removeElement}\n                      changeElementValue={changeElementValue}\n                      level={item.level as number}\n                      item={item}\n                    />\n                  );\n                }\n                case \"paragraph\": {\n                  return (\n                    <Paragraph\n                      key={item.id}\n                      item={item}\n                      removeElement={removeElement}\n                      changeElementValue={changeElementValue}\n                    />\n                  );\n                }\n                case \"image\": {\n                  return (\n                    <Image\n                      key={item.id}\n                      item={item}\n                      removeElement={removeElement}\n                    />\n                  );\n                }\n                case \"list\": {\n                  return (\n                    <List\n                      key={item.id}\n                      item={item}\n                      removeElement={removeElement}\n                      changeElementValue={changeElementValue}\n                    />\n                  );\n                }\n                case \"blockquote\": {\n                  return (\n                    <Blockquote\n                      key={item.id}\n                      item={item}\n                      removeElement={removeElement}\n                      changeElementValue={changeElementValue}\n                    />\n                  );\n                }\n                default: {\n                  return <></>;\n                }\n              }\n            })}\n          </Wrapper>\n        </StyledSlide>\n      </AspectRatioWrapper>\n    </WidthWrapper>\n  );\n}\n\nexport default forwardRef<HTMLDivElement>(Slide);\n","import styled, { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nimport { Context, useSlideState } from \"./context\";\n\nimport Elements from \"./components/Elements\";\nimport Controls from \"./components/Controls\";\nimport Slide from \"./components/Slide\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  html,\n  body {\n    height: 100%;\n  }\n\n  body {\n    font-family: \"Roboto\", sans-serif;\n  }\n`;\n\nconst ControlsWrapper = styled.div``;\nconst SlideWrapper = styled.div`\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n`;\nconst ElementsWrapper = styled.div``;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nfunction App() {\n  const {\n    ref,\n    getCurrentSlide,\n    addElement,\n    changeCurrentSlide,\n    removeSlide,\n    removeElement,\n    changeElementValue,\n    getElementsForSlide,\n    addSlide,\n    getThumbnails,\n    getNumbersOfSlide,\n  } = useSlideState();\n\n  return (\n    <Context.Provider\n      value={{\n        getNumbersOfSlide,\n        getCurrentSlide,\n        getThumbnails,\n        addElement,\n        removeElement,\n        changeElementValue,\n        removeSlide,\n        addSlide,\n        getElementsForSlide,\n        changeCurrentSlide,\n      }}\n    >\n      <GlobalStyle />\n      <Wrapper>\n        <ElementsWrapper>\n          <Elements />\n        </ElementsWrapper>\n        <SlideWrapper>\n          <Slide ref={ref} />\n        </SlideWrapper>\n        <ControlsWrapper>\n          <Controls />\n        </ControlsWrapper>\n      </Wrapper>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}