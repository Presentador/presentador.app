{"version":3,"sources":["theme.ts","renderers/singleHeader.tsx","renderers/twoHeaders.tsx","renderers/normal.tsx","renderers/headerSingleParagraph.tsx","renderers/blockquote.tsx","renderers/headerManyParagraphs.tsx","renderers/headerCodeblock.tsx","renderers/headerManyParagraphsImage.tsx","renderers/headerParagraphImage.tsx","renderers/image.tsx","renderers/manyImages.tsx","renderers/headerImage.tsx","renderers/headerList.tsx","renderers/index.tsx","context/slides.ts","context/thumbnails.ts","components/Elements.tsx","components/Thumbnail.tsx","components/Controls.tsx","components/elements/Header.tsx","components/elements/Paragraph.tsx","components/elements/Image.tsx","components/elements/List.tsx","components/elements/Blockquote.tsx","components/Slide.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["colours","Container","styled","div","TopContainer","BottomContainer","BlockContainer","LeftContainer","RightContainer","ImageContainer","renderersMap","singleHeader","children","find","item","type","displayName","className","twoHeaders","filter","mainHeader","secondHeader","normal","map","child","index","headerSingleParagraph","header","paragraph","headerCodeblock","headerManyParagraphsImage","image","paragraphs","headerParagraphImage","manyImages","itemSize","length","style","flex","headerImage","headerList","list","blockquote","headerManyParagraphs","buildersMap","add","remove","elements","SlidesContext","React","createContext","currentSlide","slides","addSlide","removeSlide","changeCurrentSlide","addElement","removeElement","changeElementValue","ThumbnailsContext","thumbnails","setThumbnails","StyledButton","button","LeftStyledButton","Elements","togglePresent","useContext","onClick","id","Date","getTime","level","value","StyledRemoveButton","StyledAddButton","StyledImage","img","active","StyledLoadingPlaceholder","Thumbnail","src","number","useState","hover","setHover","Tag","alt","onMouseEnter","onMouseLeave","first","slice","rest","Controls","_","ref","update","a","current","html2canvas","canvas","currentThumbnails","toDataURL","useEffect","forwardRef","StyledHeader","selected","Header","editingElement","useRef","setSelected","as","onKeyDown","event","code","preventDefault","blur","onInput","onBlur","setAttribute","target","innerText","onFocus","data-id","tabIndex","onMouseDown","StyledParagraph","p","Paragraph","loadingState","Image","loading","setLoading","onLoad","key","StyledList","ul","List","dangerouslySetInnerHTML","__html","split","text","element","document","createElement","innerHTML","sanitizeHTML","join","StyledBlockquote","Blockquote","SizeWrapper","scaleSize","StyledSlide","Slide","present","size","setSize","slide","Wrapper","state","updateSize","scale","Math","min","window","innerWidth","innerHeight","useLayoutEffect","addEventListener","removeEventListener","GlobalStyle","createGlobalStyle","reset","SlideWrapper","App","slideWrapperRef","setCurrentSlide","setSlides","slideNumber","nextState","at","useSlidesState","useThumbnailsState","setPresent","callback","screenfull","isEnabled","isFullscreen","on","off","totalSlides","Provider","request","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a149a18a.chunk.js","sourcesContent":["export const colours = {\n  darkText: \"#424242\",\n  lightText: \"#737373\",\n  primary: \"#4285f4\",\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: ${colours.primary};\n  color: white;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  padding: 2em;\n`;\n\nexport function SingleHeaderRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <div className=\"container\">{children}</div>\n    </Container>\n  );\n}\nexport const SingleHeaderBuilder: Builder = {\n  add: (type) => {\n    if (type === \"heading\") return \"twoHeaders\";\n    if (type === \"paragraph\") return \"headerSingleParagraph\";\n    if (type === \"list\") return \"headerList\";\n    if (type === \"image\") return \"headerImage\";\n    if (type === \"code_block\") return \"headerCodeblock\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: ${colours.primary};\n  color: white;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n  padding: 1.5em;\n`;\nconst BottomContainer = styled.div`\n  padding: 1.5em;\n`;\n\nexport function TwoHeadersRenderer({ children }: { children: JSX.Element[] }) {\n  const [mainHeader, secondHeader] = children.filter(\n    (item) => item.type.displayName === \"Header\"\n  );\n\n  if (!mainHeader) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{mainHeader}</TopContainer>\n      <BottomContainer>{secondHeader}</BottomContainer>\n    </Container>\n  );\n}\nexport const TwoHeadersBuilder: Builder = {\n  add: (type) => {\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"singleHeader\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: white;\n  padding: 1.5em;\n`;\nconst BlockContainer = styled.div`\n  display: block;\n  padding-bottom: 0.5em;\n`;\n\nexport function NormalRenderer({ children }: { children: JSX.Element[] }) {\n  return (\n    <Container>\n      {children.map((child, index) => (\n        <BlockContainer key={index}>{child}</BlockContainer>\n      ))}\n    </Container>\n  );\n}\n\nexport const NormalBuilder: Builder = {\n  add: (type, elements) => {\n    if (type === \"heading\" && !elements.length) return \"singleHeader\";\n    if (type === \"image\" && !elements.length) return \"image\";\n    if (type === \"blockquote\" && !elements.length) return \"blockquote\";\n\n    return \"normal\";\n  },\n  remove: (type, elements) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n\n  padding: 1.5em;\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  flex: 2;\n  padding: 1.5em;\n\n  p {\n    color: ${colours.lightText};\n  }\n`;\n\nexport function HeaderSingleParagraphRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const paragraph = children.find(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>{paragraph}</BottomContainer>\n    </Container>\n  );\n}\n\nexport const HeaderSingleParagraphBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"headerManyParagraphs\";\n    if (type === \"image\") return \"headerParagraphImage\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    if (type === \"heading\") return \"normal\";\n    if (type === \"paragraph\") return \"singleHeader\";\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  color: ${colours.lightText};\n`;\n\nexport function BlockquoteRenderer({ children }: { children: JSX.Element[] }) {\n  const blockquote = children.find(\n    (item) => item.type.displayName === \"Blockquote\"\n  );\n\n  if (!blockquote) {\n    return <></>;\n  }\n\n  return <Container>{blockquote}</Container>;\n}\n\nexport const BlockquoteBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"blockquote\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n  padding: 1.5em;\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  flex: 2;\n  padding: 1.5em;\n  p {\n    color: ${colours.lightText};\n    padding-bottom: 0.5em;\n  }\n`;\n\nexport function HeaderManyParagraphsRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const paragraphs = children.filter(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>{paragraphs}</BottomContainer>\n    </Container>\n  );\n}\n\nexport const HeaderManyParagraphsBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"headerManyParagraphs\";\n    if (type === \"image\") return \"headerManyParagraphsImage\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  .top {\n    background-color: ${colours.primary};\n    flex: 1;\n    display: flex;\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5 {\n      display: flex;\n      align-items: flex-end;\n      color: white;\n    }\n  }\n  .bottom {\n    align-items: center;\n    display: flex;\n    justify-content: center;\n    flex: 2;\n\n    pre {\n      display: block;\n      width: 100%;\n      height: 100%;\n\n      code {\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport function HeaderCodeblockRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const paragraph = children.find(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <div className=\"top\">{header}</div>\n      <div className=\"bottom\">{paragraph}</div>\n    </Container>\n  );\n}\n\nexport const HeaderCodeblockBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"headerManyParagraphs\";\n    if (type === \"image\") return \"headerManyParagraphsImage\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst LeftContainer = styled.div`\n  padding: 1em;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: ${colours.primary};\n  color: white;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    flex: 1;\n  }\n\n  .paragraphs {\n    flex: 2;\n\n    p {\n    }\n  }\n`;\nconst RightContainer = styled.div`\n  flex: 2;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  padding: 1.5em;\n`;\n\nconst ImageContainer = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 100%;\n\n  img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nexport function HeaderManyParagraphsImageRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const image = children.find((item) => item.type.displayName === \"Image\");\n  const paragraphs = children.filter(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <LeftContainer>\n        {header}\n        <div className=\"paragraphs\">{paragraphs}</div>\n      </LeftContainer>\n      <RightContainer>\n        <ImageContainer>{image}</ImageContainer>\n      </RightContainer>\n    </Container>\n  );\n}\n\nexport const HeaderManyParagraphsImageBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"headerManyParagraphs\";\n    if (type === \"image\") return \"headerManyParagraphsImage\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst LeftContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 1em;\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    flex: 1;\n    color: ${colours.darkText};\n  }\n\n  p {\n    color: ${colours.lightText};\n    flex: 1;\n  }\n`;\nconst RightContainer = styled.div`\n  flex: 2;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  padding: 1.5em;\n`;\n\nconst ImageContainer = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 100%;\n\n  img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nexport function HeaderParagraphImageRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const image = children.find((item) => item.type.displayName === \"Image\");\n  const paragraph = children.find(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <LeftContainer>\n        {header}\n        {paragraph}\n      </LeftContainer>\n      <RightContainer>\n        <ImageContainer>{image}</ImageContainer>\n      </RightContainer>\n    </Container>\n  );\n}\n\nexport const HeaderParagraphImageBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"headerManyParagraphs\";\n    if (type === \"image\") return \"headerManyParagraphsImage\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 1.5em;\n`;\n\nconst ImageContainer = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n\n  img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nexport function ImageRenderer({ children }: { children: JSX.Element[] }) {\n  const image = children.find((item) => item.type.displayName === \"Image\");\n\n  if (!image) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <ImageContainer>{image}</ImageContainer>\n    </Container>\n  );\n}\n\nexport const ImageBuilder: Builder = {\n  add: (type) => {\n    if (type === \"image\") return \"manyImages\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: ${colours.primary};\n  color: white;\n  padding: 1.5em;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n\n  .image {\n    justify-content: center;\n    align-items: center;\n    display: flex;\n    padding: 0.5em;\n\n    img {\n      max-width: 100%;\n      height: auto;\n    }\n  }\n`;\n\nexport function ManyImagesRenderer({ children }: { children: JSX.Element[] }) {\n  const itemSize =\n    children.length >= 2 && children.length <= 4\n      ? \"50%\"\n      : children.length >= 5 && children.length <= 7\n      ? \"33.3%\"\n      : children.length > 7\n      ? \"25%\"\n      : 0;\n\n  return (\n    <Container>\n      {children.map((item, index) => (\n        <div key={index} className=\"image\" style={{ flex: `${itemSize}` }}>\n          {item}\n        </div>\n      ))}\n    </Container>\n  );\n}\n\nexport const ManyImagesBuilder: Builder = {\n  add: (type) => {\n    if (type === \"image\") return \"manyImages\";\n    return \"normal\";\n  },\n  remove: (type: string) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n  padding: 1.5em;\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  flex: 2;\n  padding: 1.5em;\n`;\nconst ImageContainer = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 100%;\n\n  img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nexport function HeaderImageRenderer({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const image = children.find((item) => item.type.displayName === \"Image\");\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>\n        <ImageContainer>{image}</ImageContainer>\n      </BottomContainer>\n    </Container>\n  );\n}\n\nexport const HeaderImageBuilder: Builder = {\n  add: (type) => {\n    return \"normal\";\n  },\n  remove: (type) => {\n    if (type === \"image\") return \"singleHeader\";\n    if (type === \"heading\") return \"image\";\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n  padding: 1.5em;\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  flex: 2;\n  padding: 1.5em;\n  font-size: 1.1em;\n\n  line-height: 2em;\n  color: ${colours.lightText};\n\n  ul,\n  li {\n    color: ${colours.lightText};\n    list-style-type: circle;\n  }\n`;\n\nexport function HeaderListRenderer({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const list = children.find((item) => item.type.displayName === \"List\");\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>{list}</BottomContainer>\n    </Container>\n  );\n}\n\nexport const HeaderListBuilder: Builder = {\n  add: (type) => {\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"singleHeader\";\n  },\n};\n","import { Builder, State } from \"../types\";\n\nimport { SingleHeaderRenderer, SingleHeaderBuilder } from \"./singleHeader\";\nimport { TwoHeadersRenderer, TwoHeadersBuilder } from \"./twoHeaders\";\nimport { NormalRenderer, NormalBuilder } from \"./normal\";\nimport {\n  HeaderSingleParagraphRenderer,\n  HeaderSingleParagraphBuilder,\n} from \"./headerSingleParagraph\";\nimport { BlockquoteRenderer, BlockquoteBuilder } from \"./blockquote\";\nimport {\n  HeaderManyParagraphsRenderer,\n  HeaderManyParagraphsBuilder,\n} from \"./headerManyParagraphs\";\nimport {\n  HeaderCodeblockRenderer,\n  HeaderCodeblockBuilder,\n} from \"./headerCodeblock\";\nimport {\n  HeaderManyParagraphsImageRenderer,\n  HeaderManyParagraphsImageBuilder,\n} from \"./headerManyParagraphsImage\";\nimport {\n  HeaderParagraphImageRenderer,\n  HeaderParagraphImageBuilder,\n} from \"./headerParagraphImage\";\nimport { ImageRenderer, ImageBuilder } from \"./image\";\nimport { ManyImagesRenderer, ManyImagesBuilder } from \"./manyImages\";\nimport { HeaderImageRenderer, HeaderImageBuilder } from \"./headerImage\";\nimport { HeaderListRenderer, HeaderListBuilder } from \"./headerList\";\n\nexport const renderersMap: Record<State, any> = {\n  singleHeader: SingleHeaderRenderer,\n  twoHeaders: TwoHeadersRenderer,\n  normal: NormalRenderer,\n  headerSingleParagraph: HeaderSingleParagraphRenderer,\n  headerCodeblock: HeaderCodeblockRenderer,\n  headerManyParagraphsImage: HeaderManyParagraphsImageRenderer,\n  headerParagraphImage: HeaderParagraphImageRenderer,\n  image: ImageRenderer,\n  manyImages: ManyImagesRenderer,\n  headerImage: HeaderImageRenderer,\n  headerList: HeaderListRenderer,\n  blockquote: BlockquoteRenderer,\n  headerManyParagraphs: HeaderManyParagraphsRenderer,\n};\n\nexport const buildersMap: Record<State, Builder> = {\n  singleHeader: SingleHeaderBuilder,\n  twoHeaders: TwoHeadersBuilder,\n  normal: NormalBuilder,\n  headerSingleParagraph: HeaderSingleParagraphBuilder,\n  headerCodeblock: HeaderCodeblockBuilder,\n  headerManyParagraphsImage: HeaderManyParagraphsImageBuilder,\n  headerParagraphImage: HeaderParagraphImageBuilder,\n  image: ImageBuilder,\n  manyImages: ManyImagesBuilder,\n  headerImage: HeaderImageBuilder,\n  headerList: HeaderListBuilder,\n  blockquote: BlockquoteBuilder,\n  headerManyParagraphs: HeaderManyParagraphsBuilder,\n};\n","import React, { useState } from \"react\";\n\nimport { Slide, Element } from \"../types\";\n\nimport { buildersMap } from \"../renderers\";\n\nexport function useSlidesState() {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [slides, setSlides] = useState<Slide[]>([\n    { state: \"normal\", elements: [] },\n  ]);\n\n  function addSlide(at: number = slides.length) {\n    const first = slides.slice(0, at);\n    const rest = slides.slice(at);\n    setSlides([...first, { state: \"normal\", elements: [] }, ...rest]);\n    setCurrentSlide(at);\n  }\n  function removeSlide(number: number) {\n    setSlides(slides.filter((_, index) => index !== number));\n    setCurrentSlide(\n      currentSlide === slides.length - 1 ? currentSlide - 1 : currentSlide\n    );\n  }\n\n  async function addElement(slideNumber: number, item: Element) {\n    setSlides(\n      slides.map((slide, index) => {\n        if (index !== slideNumber) {\n          return slide;\n        }\n\n        const nextState = buildersMap[slide.state].add(\n          item.type,\n          slide.elements\n        );\n\n        return {\n          elements: [...slide.elements, item],\n          state: nextState,\n        };\n      })\n    );\n  }\n\n  function removeElement(slideNumber: number, id: number) {\n    setSlides(\n      slides.map((slide, index) => {\n        if (index !== slideNumber) {\n          return slide;\n        }\n\n        const element = slide.elements.find((item) => item.id === id);\n\n        if (!element) {\n          return slide;\n        }\n\n        const nextState = buildersMap[slide.state].remove(\n          element.type,\n          slide.elements\n        );\n\n        return {\n          elements: slide.elements.filter((item) => item.id !== id),\n          state: nextState,\n        };\n      })\n    );\n  }\n\n  function changeElementValue(slideNumber: number, id: number, value: string) {\n    setSlides(\n      slides.map((slide, index) => {\n        if (index !== slideNumber) {\n          return slide;\n        }\n\n        return {\n          ...slide,\n          elements: slide.elements.map((item) =>\n            item.id === id ? { ...item, value } : item\n          ),\n        };\n      })\n    );\n  }\n\n  function changeCurrentSlide(number: number) {\n    setCurrentSlide(number);\n  }\n\n  return {\n    slides,\n    currentSlide,\n    addElement,\n    removeElement,\n    changeElementValue,\n    changeCurrentSlide,\n    addSlide,\n    removeSlide,\n  };\n}\n\nexport const SlidesContext = React.createContext<{\n  currentSlide: number;\n  slides: Slide[];\n  removeSlide: (id: number) => void;\n  addSlide: (id?: number) => void;\n  addElement: (slideNumber: number, item: Element) => void;\n  removeElement: (slideNumber: number, id: number) => void;\n  changeElementValue: (slideNumber: number, id: number, value: string) => void;\n  changeCurrentSlide: (number: number) => void;\n}>({\n  currentSlide: 0,\n  slides: [],\n  addSlide: () => {},\n  removeSlide: () => {},\n  changeCurrentSlide: () => {},\n  addElement: () => {},\n  removeElement: () => {},\n  changeElementValue: () => {},\n});\n","import React, { useState } from \"react\";\n\nexport function useThumbnailsState() {\n  const [thumbnails, setThumbnails] = useState<string[]>([\"\"]);\n\n  return { thumbnails, setThumbnails };\n}\n\nexport const ThumbnailsContext = React.createContext<{\n  thumbnails: string[];\n  setThumbnails: (\n    callback: string[] | ((thumbnails: string[]) => string[])\n  ) => void;\n}>({\n  thumbnails: [],\n  setThumbnails: () => {},\n});\n","import styled from \"styled-components\";\nimport { useContext } from \"react\";\n\nimport { SlidesContext } from \"../context/slides\";\n\nconst StyledButton = styled.button`\n  padding: 10px;\n  margin-right: 5px;\n`;\n\nconst LeftStyledButton = styled.button`\n  padding: 10px;\n  margin-right: 50px;\n`;\n\nfunction Elements({ togglePresent }: { togglePresent: () => void }) {\n  const { addElement, currentSlide } = useContext(SlidesContext);\n\n  return (\n    <div>\n      <LeftStyledButton\n        onClick={() => {\n          togglePresent();\n        }}\n      >\n        Present\n      </LeftStyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"heading\",\n            level: 1,\n            value: \"Heading 1\",\n          })\n        }\n      >\n        H1\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"heading\",\n            level: 2,\n            value: \"Heading 2\",\n          })\n        }\n      >\n        H2\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"heading\",\n            level: 3,\n            value: \"Heading 3\",\n          })\n        }\n      >\n        H3\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"heading\",\n            level: 4,\n            value: \"Heading 4\",\n          })\n        }\n      >\n        H4\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"heading\",\n            level: 5,\n            value: \"Heading 5\",\n          })\n        }\n      >\n        H5\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"heading\",\n            level: 6,\n            value: \"Heading 6\",\n          })\n        }\n      >\n        H6\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"paragraph\",\n            value:\n              \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\",\n          })\n        }\n      >\n        P\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"image\",\n            value: \"https://placeimg.com/640/480/any\",\n          })\n        }\n      >\n        Img\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"list\",\n            value: \"Point one to make\",\n          })\n        }\n      >\n        Li\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"blockquote\",\n            value: \"A wise man once said...\",\n          })\n        }\n      >\n        Q\n      </StyledButton>\n    </div>\n  );\n}\n\nexport default Elements;\n","import { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../context/slides\";\nimport { ThumbnailsContext } from \"../context/thumbnails\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledRemoveButton = styled.button`\n  padding: 5px;\n  font-size: 1.1em;\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 9999;\n`;\nconst StyledAddButton = styled.button`\n  padding: 5px;\n  font-size: 1.1em;\n  position: absolute;\n  top: 0;\n  right: -25px;\n  z-index: 9999;\n`;\n\nconst StyledImage = styled.img<{ active: boolean }>`\n  display: inline-block;\n  width: 150px;\n  height: 100px;\n  vertical-align: middle;\n  border: ${({ active }) => (active ? \"1px solid red\" : \"none\")};\n  cursor: pointer;\n`;\nconst StyledLoadingPlaceholder = styled.div<{ active: boolean }>`\n  display: inline-block;\n  width: 150px;\n  height: 100px;\n  vertical-align: middle;\n  border: ${({ active }) => (active ? \"1px solid red\" : \"none\")};\n`;\n\nfunction Thumbnail({\n  src,\n  active,\n  number,\n}: {\n  src: string;\n  active: boolean;\n  number: number;\n}) {\n  const { addSlide, removeSlide, changeCurrentSlide } = useContext(\n    SlidesContext\n  );\n  const { thumbnails, setThumbnails } = useContext(ThumbnailsContext);\n  const [hover, setHover] = useState(false);\n\n  const Tag =\n    src !== \"\" ? (\n      <StyledImage\n        active={active}\n        src={src}\n        alt={`Slide`}\n        onClick={() => changeCurrentSlide(number)}\n      />\n    ) : (\n      <StyledLoadingPlaceholder active={active}>\n        Loading\n      </StyledLoadingPlaceholder>\n    );\n\n  return (\n    <Container\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      {Tag}\n      {hover && (\n        <>\n          {thumbnails.length > 1 && (\n            <StyledRemoveButton\n              onClick={() => {\n                removeSlide(number);\n                setThumbnails(\n                  thumbnails.filter((item, index) => index !== number)\n                );\n              }}\n            >\n              X\n            </StyledRemoveButton>\n          )}\n          <StyledAddButton\n            onClick={() => {\n              addSlide(number + 1);\n              const first = thumbnails.slice(0, number + 1);\n              const rest = thumbnails.slice(number + 1);\n              setThumbnails([...first, \"\", ...rest]);\n            }}\n          >\n            +\n          </StyledAddButton>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Thumbnail;\n","import html2canvas from \"html2canvas\";\nimport { useContext, useEffect, forwardRef } from \"react\";\n\nimport { SlidesContext } from \"../context/slides\";\nimport { ThumbnailsContext } from \"../context/thumbnails\";\nimport Thumbnail from \"./Thumbnail\";\n\nfunction Controls(_: any, ref: any) {\n  const { currentSlide, slides } = useContext(SlidesContext);\n  const { thumbnails, setThumbnails } = useContext(ThumbnailsContext);\n\n  async function update() {\n    if (ref.current) {\n      const canvas = await html2canvas(ref.current);\n      setThumbnails((currentThumbnails) =>\n        currentThumbnails.map((item, index) =>\n          index === currentSlide ? canvas.toDataURL() : item\n        )\n      );\n    }\n  }\n\n  // Update on elements change\n  useEffect(() => {\n    update();\n  }, [slides]); //eslint-disable-line\n\n  // Update when a slide is added\n  useEffect(() => {\n    if (thumbnails[currentSlide] === \"\") {\n      update();\n    }\n  }, [thumbnails]); //eslint-disable-line\n\n  return (\n    <div>\n      {thumbnails.map((item, index) => (\n        <Thumbnail\n          key={index}\n          src={item}\n          number={index}\n          active={currentSlide === index}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default forwardRef<HTMLDivElement>(Controls);\n","import React, { useRef, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledHeader = styled.div<{ level: number; selected: boolean }>`\n  font-size: ${({ level }) =>\n    level === 1\n      ? \"3.5em\"\n      : level === 2\n      ? \"3.2em\"\n      : level === 3\n      ? \"2.9em\"\n      : level === 4\n      ? \"2.6em\"\n      : level === 5\n      ? \"2.3em\"\n      : \"2em\"};\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n`;\n\nfunction Header({ item }: { item: Element }) {\n  const editingElement = useRef<HTMLDivElement | null>(null);\n  const [selected, setSelected] = useState(false);\n\n  const { currentSlide, removeElement, changeElementValue } = useContext(\n    SlidesContext\n  );\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n\n    if (event.target.innerText === \"\") {\n      removeElement(currentSlide, item.id);\n    } else {\n      changeElementValue(currentSlide, item.id, event.target.innerText);\n    }\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n      editingElement.current && editingElement.current.blur();\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(currentSlide, item.id);\n  }\n\n  const Tag = `h${item.level}` as \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\n\n  return (\n    <Container>\n      <StyledHeader\n        as={Tag}\n        level={item.level as number}\n        selected={selected}\n        ref={editingElement}\n        onKeyDown={checkMouseDown}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        data-id={item.id}\n        tabIndex={-1}\n      >\n        {item.value}\n      </StyledHeader>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nHeader.displayName = \"Header\";\n\nexport default Header;\n","import React, { useRef, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledParagraph = styled.p<{ selected: boolean }>`\n  font-size: 1.3em;\n  padding: 5px;\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n`;\n\nfunction Paragraph({ item }: { item: Element }) {\n  const [selected, setSelected] = useState(false);\n  const editingElement = useRef<HTMLDivElement | null>(null);\n\n  const { currentSlide, removeElement, changeElementValue } = useContext(\n    SlidesContext\n  );\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n    if (event.target.innerText === \"\") {\n      removeElement(currentSlide, item.id);\n    } else {\n      changeElementValue(currentSlide, item.id, event.target.innerText);\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(currentSlide, item.id);\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n      editingElement.current && editingElement.current.blur();\n    }\n  }\n\n  return (\n    <Container>\n      <StyledParagraph\n        selected={selected}\n        onKeyDown={checkMouseDown}\n        ref={editingElement}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        tabIndex={-1}\n        data-id={item.id}\n      >\n        {item.value}\n      </StyledParagraph>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nParagraph.displayName = \"Paragraph\";\n\nexport default Paragraph;\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { Element } from \"../../types\";\n\nconst StyledImage = styled.img<{ selected: boolean; loadingState: boolean }>`\n  font-size: 1.3em;\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n  background: ${({ loadingState }) =>\n    loadingState ? \"rgba(0, 0, 0, 0.1)\" : \"none\"};\n`;\n\nfunction Image({ item }: { item: Element }) {\n  const [selected, setSelected] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const { currentSlide, removeElement } = useContext(SlidesContext);\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    setSelected(false);\n  }\n  function edit(event: React.FocusEvent<HTMLDivElement>) {\n    setSelected(true);\n  }\n\n  function keydown(event: React.KeyboardEvent<HTMLImageElement>) {\n    if (event.key === \"Backspace\") {\n      removeElement(currentSlide, item.id);\n    }\n  }\n\n  return (\n    <StyledImage\n      onLoad={() => setLoading(false)}\n      loadingState={loading}\n      selected={selected}\n      src={item.value}\n      alt={item.value}\n      onBlur={finishEditing}\n      onKeyDown={keydown}\n      onFocus={edit}\n      tabIndex={-1}\n      data-id={item.id}\n    />\n  );\n}\n\nImage.displayName = \"Image\";\n\nexport default Image;\n","import React, { useRef, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledList = styled.ul<{ selected: boolean }>`\n  white-space: pre-wrap;\n  font-size: 1.3em;\n  padding-left: 1em; // fix lists' left padding\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n`;\n\nfunction List({ item }: { item: Element }) {\n  const [selected, setSelected] = useState(false);\n  const editingElement = useRef<HTMLUListElement | null>(null);\n\n  const { currentSlide, removeElement, changeElementValue } = useContext(\n    SlidesContext\n  );\n\n  function editHeading() {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLUListElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n    if (event.target.innerText === \"\") {\n      removeElement(currentSlide, item.id);\n    } else {\n      changeElementValue(currentSlide, item.id, event.target.innerText);\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(currentSlide, item.id);\n  }\n\n  function sanitizeHTML(text: string) {\n    var element = document.createElement(\"div\");\n    element.innerText = text;\n    return element.innerHTML;\n  }\n\n  return (\n    <Container>\n      <StyledList\n        selected={selected}\n        ref={editingElement}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        tabIndex={-1}\n        data-id={item.id}\n        dangerouslySetInnerHTML={{\n          // React can't deal with a content editable list and manage its children\n          __html: item.value\n            .split(\"\\n\")\n            .map((item) => `<li>${sanitizeHTML(item)}</li>`)\n            .join(\"\"),\n        }}\n      ></StyledList>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nList.displayName = \"List\";\n\nexport default List;\n","import React, { useRef, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledBlockquote = styled.blockquote<{ selected: boolean }>`\n  font-size: 1.3em;\n  padding: 50px;\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n  quotes: \"“\" \"”\" \"‘\" \"’\";\n\n  background: #f9f9f9;\n\n  &:before {\n    color: #ccc;\n    content: open-quote;\n    font-size: 4em;\n    line-height: 0.1em;\n    margin-right: 0.25em;\n    vertical-align: -0.4em;\n  }\n\n  p {\n    display: inline;\n  }\n`;\n\nfunction Blockquote({ item }: { item: Element }) {\n  const [selected, setSelected] = useState(false);\n  const editingElement = useRef<HTMLDivElement | null>(null);\n\n  const { currentSlide, removeElement, changeElementValue } = useContext(\n    SlidesContext\n  );\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n    if (event.target.innerText === \"\") {\n      removeElement(currentSlide, item.id);\n    } else {\n      changeElementValue(currentSlide, item.id, event.target.innerText);\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(currentSlide, item.id);\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n      editingElement.current && editingElement.current.blur();\n    }\n  }\n\n  return (\n    <Container>\n      <StyledBlockquote\n        selected={selected}\n        onKeyDown={checkMouseDown}\n        ref={editingElement}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        tabIndex={-1}\n        data-id={item.id}\n      >\n        <p>{item.value}</p>\n      </StyledBlockquote>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nBlockquote.displayName = \"Blockquote\";\n\nexport default Blockquote;\n","import { useLayoutEffect, useState, useContext, forwardRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../context/slides\";\n\nimport Header from \"./elements/Header\";\nimport Paragraph from \"./elements/Paragraph\";\nimport Image from \"./elements/Image\";\nimport List from \"./elements/List\";\nimport Blockquote from \"./elements/Blockquote\";\n\nimport { renderersMap } from \"../renderers\";\n\nconst SizeWrapper = styled.div<{ scaleSize: number }>`\n  width: 960px;\n  height: 700px;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  transform-origin: center center;\n  transform: ${({ scaleSize }) => `scale(${scaleSize})`};\n`;\n\nconst StyledSlide = styled.div`\n  background: white;\n  width: 100%;\n  height: 100%;\n\n  a {\n    color: #51c2f7;\n  }\n\n  ul {\n    list-style-type: circle;\n  }\n`;\n\nfunction Slide({ present }: { present: boolean }, ref: any) {\n  const { slides, currentSlide } = useContext(SlidesContext);\n  const [size, setSize] = useState(1);\n\n  const slide = slides[currentSlide];\n  const Wrapper = renderersMap[slide.state];\n\n  function updateSize() {\n    // scale to fit window width and/or height\n    const scale = Math.min(window.innerWidth / 960, window.innerHeight / 700);\n    setSize(scale);\n  }\n  useLayoutEffect(() => {\n    window.addEventListener(\"resize\", updateSize);\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n\n  return (\n    <SizeWrapper scaleSize={size > 1 && !present ? 1 : size}>\n      <StyledSlide className={slide.state} ref={ref}>\n        <Wrapper>\n          {slide.elements.map((item) => {\n            switch (item.type) {\n              case \"heading\": {\n                return <Header key={item.id} item={item} />;\n              }\n              case \"paragraph\": {\n                return <Paragraph key={item.id} item={item} />;\n              }\n              case \"image\": {\n                return <Image key={item.id} item={item} />;\n              }\n              case \"list\": {\n                return <List key={item.id} item={item} />;\n              }\n              case \"blockquote\": {\n                return <Blockquote key={item.id} item={item} />;\n              }\n              default: {\n                return <></>;\n              }\n            }\n          })}\n        </Wrapper>\n      </StyledSlide>\n    </SizeWrapper>\n  );\n}\n\nexport default forwardRef<HTMLDivElement, { present: boolean }>(Slide);\n","import screenfull from \"screenfull\";\nimport { useRef, useState, useEffect } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nimport { SlidesContext, useSlidesState } from \"../context/slides\";\nimport { ThumbnailsContext, useThumbnailsState } from \"../context/thumbnails\";\n\nimport Elements from \"./Elements\";\nimport Controls from \"./Controls\";\nimport Slide from \"./Slide\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  html,\n  body {\n    height: 100%;\n  }\n\n  body {\n    font-family: \"Roboto\", sans-serif;\n  }\n`;\n\nconst Wrapper = styled.div`\n  background: #eee;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst SlideWrapper = styled.div`\n  flex: 1;\n`;\n\nfunction App() {\n  const slideWrapperRef = useRef<HTMLDivElement>(null);\n\n  const {\n    slides,\n    currentSlide,\n    addElement,\n    changeCurrentSlide,\n    removeSlide,\n    removeElement,\n    changeElementValue,\n    addSlide,\n  } = useSlidesState();\n\n  const { thumbnails, setThumbnails } = useThumbnailsState();\n\n  const [present, setPresent] = useState(false);\n\n  useEffect(() => {\n    const callback = () => {\n      if (screenfull.isEnabled) {\n        if (!screenfull.isFullscreen) {\n          setPresent(false);\n        }\n      }\n    };\n    if (screenfull.isEnabled) {\n      screenfull.on(\"change\", callback);\n    }\n    const unsubscribe = () => {\n      if (screenfull.isEnabled) {\n        screenfull.off(\"change\", callback);\n      }\n    };\n    return unsubscribe;\n  }, [present]);\n\n  useEffect(() => {\n    const callback = (event: any) => {\n      if (event.code === \"ArrowLeft\") {\n        changeCurrentSlide(currentSlide === 0 ? 0 : currentSlide - 1);\n      }\n      if (event.code === \"ArrowRight\") {\n        const totalSlides = slides.length;\n        changeCurrentSlide(\n          currentSlide === totalSlides - 1 ? currentSlide : currentSlide + 1\n        );\n      }\n    };\n\n    window.addEventListener(\"keydown\", callback);\n\n    return () => window.removeEventListener(\"keydown\", callback);\n  }, [currentSlide, slides]); // eslint-disable-line\n\n  return (\n    <ThumbnailsContext.Provider value={{ thumbnails, setThumbnails }}>\n      <SlidesContext.Provider\n        value={{\n          slides,\n          currentSlide,\n          addElement,\n          removeElement,\n          changeElementValue,\n          removeSlide,\n          addSlide,\n          changeCurrentSlide,\n        }}\n      >\n        <GlobalStyle />\n        <Wrapper>\n          {!present && (\n            <Elements\n              togglePresent={() => {\n                setPresent(!present);\n                if (screenfull.isEnabled) {\n                  screenfull.request();\n                }\n              }}\n            />\n          )}\n          <SlideWrapper>\n            <Slide present={present} ref={slideWrapperRef} />\n          </SlideWrapper>\n          {!present && <Controls ref={slideWrapperRef} />}\n        </Wrapper>\n      </SlidesContext.Provider>\n    </ThumbnailsContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}