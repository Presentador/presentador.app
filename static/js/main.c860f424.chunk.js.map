{"version":3,"sources":["theme.ts","renderers/singleHeader.tsx","renderers/twoHeaders.tsx","renderers/normal.tsx","renderers/headerSingleParagraph.tsx","renderers/blockquote.tsx","renderers/headerManyParagraphs.tsx","renderers/headerCodeblock.tsx","renderers/headerManyParagraphsImage.tsx","renderers/headerParagraphImage.tsx","renderers/image.tsx","renderers/manyImages.tsx","renderers/headerImage.tsx","renderers/headerBlockquote.tsx","renderers/headerList.tsx","renderers/index.tsx","context/slides.ts","context/thumbnails.ts","context/deck.ts","components/Elements.tsx","components/Thumbnail.tsx","components/Controls.tsx","components/elements/Header.tsx","components/elements/Paragraph.tsx","components/elements/Image.tsx","components/elements/List.tsx","components/elements/Blockquote.tsx","components/Slide.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["colours","Container","styled","div","TopContainer","BottomContainer","BlockContainer","LeftContainer","RightContainer","ImageContainer","renderersMap","singleHeader","children","find","item","type","displayName","className","twoHeaders","filter","mainHeader","secondHeader","normal","map","child","index","headerSingleParagraph","header","paragraph","headerCodeblock","headerManyParagraphsImage","image","paragraphs","headerParagraphImage","manyImages","itemSize","length","style","flex","headerImage","headerList","list","blockquote","headerManyParagraphs","headerBlockquote","buildersMap","add","remove","elements","SlidesContext","React","createContext","slides","addSlide","removeSlide","addElement","removeElement","changeElementValue","ThumbnailsContext","thumbnails","setThumbnails","DeckContext","size","setSize","present","setPresent","currentSlide","setCurrentSlide","StyledButton","button","LeftStyledButton","Elements","togglePresent","useContext","onClick","id","Date","getTime","level","value","StyledRemoveButton","StyledAddButton","StyledImage","img","active","StyledLoadingPlaceholder","Thumbnail","src","number","useState","hover","setHover","Tag","alt","onMouseEnter","onMouseLeave","first","slice","rest","Controls","_","ref","update","a","current","html2canvas","canvas","currentThumbnails","toDataURL","useEffect","forwardRef","StyledHeader","selected","Header","slideNumber","editingElement","useRef","setSelected","as","onKeyDown","event","code","preventDefault","blur","onInput","onBlur","setAttribute","target","innerText","onFocus","data-id","tabIndex","onMouseDown","StyledParagraph","p","Paragraph","loadingState","Image","loading","setLoading","onLoad","key","StyledList","ul","List","dangerouslySetInnerHTML","__html","split","text","element","document","createElement","innerHTML","sanitizeHTML","join","StyledBlockquote","Blockquote","SizeWrapper","scaleSize","StyledSlide","Slide","scale","setScale","slide","Wrapper","state","updateSize","Math","min","window","innerWidth","innerHeight","useLayoutEffect","addEventListener","removeEventListener","GlobalStyle","createGlobalStyle","reset","SlideWrapper","App","slideWrapperRef","setSlides","nextState","at","useSlidesState","useThumbnailsState","useDeckState","callback","screenfull","isEnabled","isFullscreen","on","off","totalSlides","Provider","request","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c860f424.chunk.js","sourcesContent":["export const colours = {\n  darkText: \"#424242\",\n  lightText: \"#737373\",\n  primary: \"#4285f4\",\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: ${colours.primary};\n  color: white;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  padding: 2em;\n`;\n\nexport function SingleHeaderRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <div className=\"container\">{children}</div>\n    </Container>\n  );\n}\nexport const SingleHeaderBuilder: Builder = {\n  add: (type) => {\n    if (type === \"heading\") return \"twoHeaders\";\n    if (type === \"paragraph\") return \"headerSingleParagraph\";\n    if (type === \"list\") return \"headerList\";\n    if (type === \"image\") return \"headerImage\";\n    if (type === \"code_block\") return \"headerCodeblock\";\n    if (type === \"blockquote\") return \"headerBlockquote\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: ${colours.primary};\n  color: white;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n  padding: 1.5em;\n`;\nconst BottomContainer = styled.div`\n  padding: 1.5em;\n`;\n\nexport function TwoHeadersRenderer({ children }: { children: JSX.Element[] }) {\n  const [mainHeader, secondHeader] = children.filter(\n    (item) => item.type.displayName === \"Header\"\n  );\n\n  if (!mainHeader) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{mainHeader}</TopContainer>\n      <BottomContainer>{secondHeader}</BottomContainer>\n    </Container>\n  );\n}\nexport const TwoHeadersBuilder: Builder = {\n  add: (type) => {\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"singleHeader\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: white;\n  padding: 1.5em;\n`;\nconst BlockContainer = styled.div`\n  display: block;\n  padding-bottom: 0.5em;\n`;\n\nexport function NormalRenderer({ children }: { children: JSX.Element[] }) {\n  return (\n    <Container>\n      {children.map((child, index) => (\n        <BlockContainer key={index}>{child}</BlockContainer>\n      ))}\n    </Container>\n  );\n}\n\nexport const NormalBuilder: Builder = {\n  add: (type, elements) => {\n    if (type === \"heading\" && !elements.length) return \"singleHeader\";\n    if (type === \"image\" && !elements.length) return \"image\";\n    if (type === \"blockquote\" && !elements.length) return \"blockquote\";\n\n    return \"normal\";\n  },\n  remove: (type, elements) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n\n  padding: 1.5em;\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  flex: 2;\n  padding: 1.5em;\n\n  p {\n    color: ${colours.lightText};\n  }\n`;\n\nexport function HeaderSingleParagraphRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const paragraph = children.find(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>{paragraph}</BottomContainer>\n    </Container>\n  );\n}\n\nexport const HeaderSingleParagraphBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"headerManyParagraphs\";\n    if (type === \"image\") return \"headerParagraphImage\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    if (type === \"heading\") return \"normal\";\n    if (type === \"paragraph\") return \"singleHeader\";\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  color: ${colours.lightText};\n`;\n\nexport function BlockquoteRenderer({ children }: { children: JSX.Element[] }) {\n  const blockquote = children.find(\n    (item) => item.type.displayName === \"Blockquote\"\n  );\n\n  if (!blockquote) {\n    return <></>;\n  }\n\n  return <Container>{blockquote}</Container>;\n}\n\nexport const BlockquoteBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"blockquote\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n  padding: 1.5em;\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  flex: 2;\n  padding: 1.5em;\n  p {\n    color: ${colours.lightText};\n    padding-bottom: 0.5em;\n  }\n`;\n\nexport function HeaderManyParagraphsRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const paragraphs = children.filter(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>{paragraphs}</BottomContainer>\n    </Container>\n  );\n}\n\nexport const HeaderManyParagraphsBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"headerManyParagraphs\";\n    if (type === \"image\") return \"headerManyParagraphsImage\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  .top {\n    background-color: ${colours.primary};\n    flex: 1;\n    display: flex;\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5 {\n      display: flex;\n      align-items: flex-end;\n      color: white;\n    }\n  }\n  .bottom {\n    align-items: center;\n    display: flex;\n    justify-content: center;\n    flex: 2;\n\n    pre {\n      display: block;\n      width: 100%;\n      height: 100%;\n\n      code {\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport function HeaderCodeblockRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const paragraph = children.find(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <div className=\"top\">{header}</div>\n      <div className=\"bottom\">{paragraph}</div>\n    </Container>\n  );\n}\n\nexport const HeaderCodeblockBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"headerManyParagraphs\";\n    if (type === \"image\") return \"headerManyParagraphsImage\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst LeftContainer = styled.div`\n  padding: 1em;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: ${colours.primary};\n  color: white;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    flex: 1;\n  }\n\n  .paragraphs {\n    flex: 2;\n\n    p {\n    }\n  }\n`;\nconst RightContainer = styled.div`\n  flex: 2;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  padding: 1.5em;\n`;\n\nconst ImageContainer = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 100%;\n\n  img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nexport function HeaderManyParagraphsImageRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const image = children.find((item) => item.type.displayName === \"Image\");\n  const paragraphs = children.filter(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <LeftContainer>\n        {header}\n        <div className=\"paragraphs\">{paragraphs}</div>\n      </LeftContainer>\n      <RightContainer>\n        <ImageContainer>{image}</ImageContainer>\n      </RightContainer>\n    </Container>\n  );\n}\n\nexport const HeaderManyParagraphsImageBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"headerManyParagraphs\";\n    if (type === \"image\") return \"headerManyParagraphsImage\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst LeftContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 1em;\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    flex: 1;\n    color: ${colours.darkText};\n  }\n\n  p {\n    color: ${colours.lightText};\n    flex: 1;\n  }\n`;\nconst RightContainer = styled.div`\n  flex: 2;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  padding: 1.5em;\n`;\n\nconst ImageContainer = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 100%;\n\n  img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nexport function HeaderParagraphImageRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const image = children.find((item) => item.type.displayName === \"Image\");\n  const paragraph = children.find(\n    (item) => item.type.displayName === \"Paragraph\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <LeftContainer>\n        {header}\n        {paragraph}\n      </LeftContainer>\n      <RightContainer>\n        <ImageContainer>{image}</ImageContainer>\n      </RightContainer>\n    </Container>\n  );\n}\n\nexport const HeaderParagraphImageBuilder: Builder = {\n  add: (type) => {\n    if (type === \"paragraph\") return \"headerManyParagraphs\";\n    if (type === \"image\") return \"headerManyParagraphsImage\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 1.5em;\n`;\n\nconst ImageContainer = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n\n  img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nexport function ImageRenderer({ children }: { children: JSX.Element[] }) {\n  const image = children.find((item) => item.type.displayName === \"Image\");\n\n  if (!image) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <ImageContainer>{image}</ImageContainer>\n    </Container>\n  );\n}\n\nexport const ImageBuilder: Builder = {\n  add: (type) => {\n    if (type === \"image\") return \"manyImages\";\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: ${colours.primary};\n  color: white;\n  padding: 1.5em;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n\n  .image {\n    justify-content: center;\n    align-items: center;\n    display: flex;\n    padding: 0.5em;\n\n    img {\n      max-width: 100%;\n      height: auto;\n    }\n  }\n`;\n\nexport function ManyImagesRenderer({ children }: { children: JSX.Element[] }) {\n  const itemSize =\n    children.length >= 2 && children.length <= 4\n      ? \"50%\"\n      : children.length >= 5 && children.length <= 7\n      ? \"33.3%\"\n      : children.length > 7\n      ? \"25%\"\n      : 0;\n\n  return (\n    <Container>\n      {children.map((item, index) => (\n        <div key={index} className=\"image\" style={{ flex: `${itemSize}` }}>\n          {item}\n        </div>\n      ))}\n    </Container>\n  );\n}\n\nexport const ManyImagesBuilder: Builder = {\n  add: (type) => {\n    if (type === \"image\") return \"manyImages\";\n    return \"normal\";\n  },\n  remove: (type: string) => {\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n  padding: 1.5em;\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  flex: 2;\n  padding: 1.5em;\n`;\nconst ImageContainer = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 100%;\n\n  img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nexport function HeaderImageRenderer({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const image = children.find((item) => item.type.displayName === \"Image\");\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>\n        <ImageContainer>{image}</ImageContainer>\n      </BottomContainer>\n    </Container>\n  );\n}\n\nexport const HeaderImageBuilder: Builder = {\n  add: (type) => {\n    return \"normal\";\n  },\n  remove: (type) => {\n    if (type === \"image\") return \"singleHeader\";\n    if (type === \"heading\") return \"image\";\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n  padding: 1.5em;\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  flex: 2;\n  padding: 1.5em;\n`;\n\nexport function HeaderBlockquoteRenderer({\n  children,\n}: {\n  children: JSX.Element[];\n}) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const blockquote = children.find(\n    (item) => item.type.displayName === \"Blockquote\"\n  );\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>{blockquote}</BottomContainer>\n    </Container>\n  );\n}\n\nexport const HeaderBlockquoteBuilder: Builder = {\n  add: (type) => {\n    return \"normal\";\n  },\n  remove: (type) => {\n    if (type === \"blockquote\") return \"singleHeader\";\n    if (type === \"heading\") return \"blockquote\";\n    return \"normal\";\n  },\n};\n","import styled from \"styled-components\";\n\nimport { Builder } from \"../types\";\nimport { colours } from \"../theme\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TopContainer = styled.div`\n  box-shadow: 0px 2px 5px -2px rgba(0, 0, 0, 0.3);\n  padding: 1.5em;\n  background-color: ${colours.primary};\n  flex: 1;\n  display: flex;\n  align-items: flex-end;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n  flex: 2;\n  padding: 1.5em;\n  font-size: 1.1em;\n\n  line-height: 2em;\n  color: ${colours.lightText};\n\n  ul,\n  li {\n    color: ${colours.lightText};\n    list-style-type: circle;\n  }\n`;\n\nexport function HeaderListRenderer({ children }: { children: JSX.Element[] }) {\n  const header = children.find((item) => item.type.displayName === \"Header\");\n  const list = children.find((item) => item.type.displayName === \"List\");\n\n  if (!header) {\n    return <></>;\n  }\n\n  return (\n    <Container>\n      <TopContainer>{header}</TopContainer>\n      <BottomContainer>{list}</BottomContainer>\n    </Container>\n  );\n}\n\nexport const HeaderListBuilder: Builder = {\n  add: (type) => {\n    return \"normal\";\n  },\n  remove: (type) => {\n    return \"singleHeader\";\n  },\n};\n","import { Builder, State } from \"../types\";\n\nimport { SingleHeaderRenderer, SingleHeaderBuilder } from \"./singleHeader\";\nimport { TwoHeadersRenderer, TwoHeadersBuilder } from \"./twoHeaders\";\nimport { NormalRenderer, NormalBuilder } from \"./normal\";\nimport {\n  HeaderSingleParagraphRenderer,\n  HeaderSingleParagraphBuilder,\n} from \"./headerSingleParagraph\";\nimport { BlockquoteRenderer, BlockquoteBuilder } from \"./blockquote\";\nimport {\n  HeaderManyParagraphsRenderer,\n  HeaderManyParagraphsBuilder,\n} from \"./headerManyParagraphs\";\nimport {\n  HeaderCodeblockRenderer,\n  HeaderCodeblockBuilder,\n} from \"./headerCodeblock\";\nimport {\n  HeaderManyParagraphsImageRenderer,\n  HeaderManyParagraphsImageBuilder,\n} from \"./headerManyParagraphsImage\";\nimport {\n  HeaderParagraphImageRenderer,\n  HeaderParagraphImageBuilder,\n} from \"./headerParagraphImage\";\nimport { ImageRenderer, ImageBuilder } from \"./image\";\nimport { ManyImagesRenderer, ManyImagesBuilder } from \"./manyImages\";\nimport { HeaderImageRenderer, HeaderImageBuilder } from \"./headerImage\";\nimport {\n  HeaderBlockquoteRenderer,\n  HeaderBlockquoteBuilder,\n} from \"./headerBlockquote\";\nimport { HeaderListRenderer, HeaderListBuilder } from \"./headerList\";\n\nexport const renderersMap: Record<State, any> = {\n  singleHeader: SingleHeaderRenderer,\n  twoHeaders: TwoHeadersRenderer,\n  normal: NormalRenderer,\n  headerSingleParagraph: HeaderSingleParagraphRenderer,\n  headerCodeblock: HeaderCodeblockRenderer,\n  headerManyParagraphsImage: HeaderManyParagraphsImageRenderer,\n  headerParagraphImage: HeaderParagraphImageRenderer,\n  image: ImageRenderer,\n  manyImages: ManyImagesRenderer,\n  headerImage: HeaderImageRenderer,\n  headerList: HeaderListRenderer,\n  blockquote: BlockquoteRenderer,\n  headerManyParagraphs: HeaderManyParagraphsRenderer,\n  headerBlockquote: HeaderBlockquoteRenderer,\n};\n\nexport const buildersMap: Record<State, Builder> = {\n  singleHeader: SingleHeaderBuilder,\n  twoHeaders: TwoHeadersBuilder,\n  normal: NormalBuilder,\n  headerSingleParagraph: HeaderSingleParagraphBuilder,\n  headerCodeblock: HeaderCodeblockBuilder,\n  headerManyParagraphsImage: HeaderManyParagraphsImageBuilder,\n  headerParagraphImage: HeaderParagraphImageBuilder,\n  image: ImageBuilder,\n  manyImages: ManyImagesBuilder,\n  headerImage: HeaderImageBuilder,\n  headerList: HeaderListBuilder,\n  blockquote: BlockquoteBuilder,\n  headerManyParagraphs: HeaderManyParagraphsBuilder,\n  headerBlockquote: HeaderBlockquoteBuilder,\n};\n","import React, { useState } from \"react\";\n\nimport { Slide, Element } from \"../types\";\n\nimport { buildersMap } from \"../renderers\";\n\nexport function useSlidesState() {\n  const [slides, setSlides] = useState<Slide[]>([\n    { state: \"normal\", elements: [] },\n  ]);\n\n  function addSlide(at: number = slides.length) {\n    const first = slides.slice(0, at);\n    const rest = slides.slice(at);\n    setSlides([...first, { state: \"normal\", elements: [] }, ...rest]);\n  }\n  function removeSlide(number: number) {\n    setSlides(slides.filter((_, index) => index !== number));\n  }\n\n  async function addElement(slideNumber: number, item: Element) {\n    setSlides(\n      slides.map((slide, index) => {\n        if (index !== slideNumber) {\n          return slide;\n        }\n\n        const nextState = buildersMap[slide.state].add(\n          item.type,\n          slide.elements\n        );\n\n        return {\n          elements: [...slide.elements, item],\n          state: nextState,\n        };\n      })\n    );\n  }\n\n  function removeElement(slideNumber: number, id: number) {\n    setSlides(\n      slides.map((slide, index) => {\n        if (index !== slideNumber) {\n          return slide;\n        }\n\n        const element = slide.elements.find((item) => item.id === id);\n\n        if (!element) {\n          return slide;\n        }\n\n        const nextState = buildersMap[slide.state].remove(\n          element.type,\n          slide.elements\n        );\n\n        return {\n          elements: slide.elements.filter((item) => item.id !== id),\n          state: nextState,\n        };\n      })\n    );\n  }\n\n  function changeElementValue(slideNumber: number, id: number, value: string) {\n    setSlides(\n      slides.map((slide, index) => {\n        if (index !== slideNumber) {\n          return slide;\n        }\n\n        return {\n          ...slide,\n          elements: slide.elements.map((item) =>\n            item.id === id ? { ...item, value } : item\n          ),\n        };\n      })\n    );\n  }\n\n  return {\n    slides,\n    addElement,\n    removeElement,\n    changeElementValue,\n    addSlide,\n    removeSlide,\n  };\n}\n\nexport const SlidesContext = React.createContext<{\n  slides: Slide[];\n  removeSlide: (id: number) => void;\n  addSlide: (id?: number) => void;\n  addElement: (slideNumber: number, item: Element) => void;\n  removeElement: (slideNumber: number, id: number) => void;\n  changeElementValue: (slideNumber: number, id: number, value: string) => void;\n}>({\n  slides: [],\n  addSlide: () => {},\n  removeSlide: () => {},\n  addElement: () => {},\n  removeElement: () => {},\n  changeElementValue: () => {},\n});\n","import React, { useState } from \"react\";\n\nexport function useThumbnailsState() {\n  const [thumbnails, setThumbnails] = useState<string[]>([\"\"]);\n\n  return { thumbnails, setThumbnails };\n}\n\nexport const ThumbnailsContext = React.createContext<{\n  thumbnails: string[];\n  setThumbnails: (\n    callback: string[] | ((thumbnails: string[]) => string[])\n  ) => void;\n}>({\n  thumbnails: [],\n  setThumbnails: () => {},\n});\n","import React, { useState } from \"react\";\n\nexport function useDeckState() {\n  const [present, setPresent] = useState(false);\n  const [size, setSize] = useState<[number, number]>([960, 700]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  return { currentSlide, setCurrentSlide, present, setPresent, size, setSize };\n}\n\nexport const DeckContext = React.createContext<{\n  currentSlide: number;\n  setCurrentSlide: (number: number) => void;\n  present: boolean;\n  setPresent: (present: boolean) => void;\n  size: [number, number];\n  setSize: (size: [number, number]) => void;\n}>({\n  size: [0, 0],\n  setSize: () => {},\n  present: false,\n  setPresent: () => {},\n  currentSlide: 0,\n  setCurrentSlide: () => {},\n});\n","import styled from \"styled-components\";\nimport { useContext } from \"react\";\n\nimport { SlidesContext } from \"../context/slides\";\nimport { DeckContext } from \"../context/deck\";\n\nconst StyledButton = styled.button`\n  padding: 10px;\n  margin-right: 5px;\n`;\n\nconst LeftStyledButton = styled.button`\n  padding: 10px;\n  margin-right: 50px;\n`;\n\nfunction Elements({ togglePresent }: { togglePresent: () => void }) {\n  const { addElement } = useContext(SlidesContext);\n  const { currentSlide } = useContext(DeckContext);\n\n  return (\n    <div>\n      <LeftStyledButton\n        onClick={() => {\n          togglePresent();\n        }}\n      >\n        Present\n      </LeftStyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"heading\",\n            level: 1,\n            value: \"Heading 1\",\n          })\n        }\n      >\n        H1\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"heading\",\n            level: 2,\n            value: \"Heading 2\",\n          })\n        }\n      >\n        H2\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"heading\",\n            level: 3,\n            value: \"Heading 3\",\n          })\n        }\n      >\n        H3\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"heading\",\n            level: 4,\n            value: \"Heading 4\",\n          })\n        }\n      >\n        H4\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"heading\",\n            level: 5,\n            value: \"Heading 5\",\n          })\n        }\n      >\n        H5\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"heading\",\n            level: 6,\n            value: \"Heading 6\",\n          })\n        }\n      >\n        H6\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"paragraph\",\n            value:\n              \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\",\n          })\n        }\n      >\n        P\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"image\",\n            value: \"https://placeimg.com/640/480/any\",\n          })\n        }\n      >\n        Img\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"list\",\n            value: \"Point one to make\",\n          })\n        }\n      >\n        Li\n      </StyledButton>\n      <StyledButton\n        onClick={() =>\n          addElement(currentSlide, {\n            id: new Date().getTime(),\n            type: \"blockquote\",\n            value: \"A wise man once said...\",\n          })\n        }\n      >\n        Q\n      </StyledButton>\n    </div>\n  );\n}\n\nexport default Elements;\n","import { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../context/slides\";\nimport { DeckContext } from \"../context/deck\";\nimport { ThumbnailsContext } from \"../context/thumbnails\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledRemoveButton = styled.button`\n  padding: 5px;\n  font-size: 1.1em;\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 9999;\n`;\nconst StyledAddButton = styled.button`\n  padding: 5px;\n  font-size: 1.1em;\n  position: absolute;\n  top: 0;\n  right: -25px;\n  z-index: 9999;\n`;\n\nconst StyledImage = styled.img<{ active: boolean }>`\n  display: inline-block;\n  width: 150px;\n  height: 100px;\n  vertical-align: middle;\n  border: ${({ active }) => (active ? \"1px solid red\" : \"none\")};\n  cursor: pointer;\n`;\nconst StyledLoadingPlaceholder = styled.div<{ active: boolean }>`\n  display: inline-block;\n  width: 150px;\n  height: 100px;\n  vertical-align: middle;\n  border: ${({ active }) => (active ? \"1px solid red\" : \"none\")};\n`;\n\nfunction Thumbnail({\n  src,\n  active,\n  number,\n}: {\n  src: string;\n  active: boolean;\n  number: number;\n}) {\n  const { addSlide, removeSlide } = useContext(SlidesContext);\n  const { currentSlide, setCurrentSlide } = useContext(DeckContext);\n  const { thumbnails, setThumbnails } = useContext(ThumbnailsContext);\n  const [hover, setHover] = useState(false);\n\n  const Tag =\n    src !== \"\" ? (\n      <StyledImage\n        active={active}\n        src={src}\n        alt={`Slide`}\n        onClick={() => setCurrentSlide(number)}\n      />\n    ) : (\n      <StyledLoadingPlaceholder active={active}>\n        Loading\n      </StyledLoadingPlaceholder>\n    );\n\n  return (\n    <Container\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      {Tag}\n      {hover && (\n        <>\n          {thumbnails.length > 1 && (\n            <StyledRemoveButton\n              onClick={() => {\n                removeSlide(number);\n                setCurrentSlide(number === 0 ? number : number - 1);\n                setThumbnails(\n                  thumbnails.filter((item, index) => index !== number)\n                );\n              }}\n            >\n              X\n            </StyledRemoveButton>\n          )}\n          <StyledAddButton\n            onClick={() => {\n              addSlide(number + 1);\n              setCurrentSlide(currentSlide + 1);\n              const first = thumbnails.slice(0, number + 1);\n              const rest = thumbnails.slice(number + 1);\n              setThumbnails([...first, \"\", ...rest]);\n            }}\n          >\n            +\n          </StyledAddButton>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Thumbnail;\n","import html2canvas from \"html2canvas\";\nimport { useContext, useEffect, forwardRef } from \"react\";\n\nimport { SlidesContext } from \"../context/slides\";\nimport { DeckContext } from \"../context/deck\";\nimport { ThumbnailsContext } from \"../context/thumbnails\";\nimport Thumbnail from \"./Thumbnail\";\n\nfunction Controls(_: any, ref: any) {\n  const { slides } = useContext(SlidesContext);\n  const { currentSlide } = useContext(DeckContext);\n  const { thumbnails, setThumbnails } = useContext(ThumbnailsContext);\n\n  async function update() {\n    if (ref.current) {\n      const canvas = await html2canvas(ref.current);\n      setThumbnails((currentThumbnails) =>\n        currentThumbnails.map((item, index) =>\n          index === currentSlide ? canvas.toDataURL() : item\n        )\n      );\n    }\n  }\n\n  // Update on elements change\n  useEffect(() => {\n    update();\n  }, [slides]); //eslint-disable-line\n\n  // Update when a slide is added\n  useEffect(() => {\n    if (thumbnails[currentSlide] === \"\") {\n      update();\n    }\n  }, [thumbnails]); //eslint-disable-line\n\n  return (\n    <div>\n      {thumbnails.map((item, index) => (\n        <Thumbnail\n          key={index}\n          src={item}\n          number={index}\n          active={currentSlide === index}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default forwardRef<HTMLDivElement>(Controls);\n","import React, { useRef, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledHeader = styled.div<{ level: number; selected: boolean }>`\n  font-size: ${({ level }) =>\n    level === 1\n      ? \"3.5em\"\n      : level === 2\n      ? \"3.2em\"\n      : level === 3\n      ? \"2.9em\"\n      : level === 4\n      ? \"2.6em\"\n      : level === 5\n      ? \"2.3em\"\n      : \"2em\"};\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n`;\n\nfunction Header({ slideNumber, item }: { slideNumber: number; item: Element }) {\n  const editingElement = useRef<HTMLDivElement | null>(null);\n  const [selected, setSelected] = useState(false);\n\n  const { removeElement, changeElementValue } = useContext(SlidesContext);\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n\n    if (event.target.innerText === \"\") {\n      removeElement(slideNumber, item.id);\n    } else {\n      changeElementValue(slideNumber, item.id, event.target.innerText);\n    }\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n      editingElement.current && editingElement.current.blur();\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(slideNumber, item.id);\n  }\n\n  const Tag = `h${item.level}` as \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\n\n  return (\n    <Container>\n      <StyledHeader\n        as={Tag}\n        level={item.level as number}\n        selected={selected}\n        ref={editingElement}\n        onKeyDown={checkMouseDown}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        data-id={item.id}\n        tabIndex={-1}\n      >\n        {item.value}\n      </StyledHeader>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nHeader.displayName = \"Header\";\n\nexport default Header;\n","import React, { useRef, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledParagraph = styled.p<{ selected: boolean }>`\n  font-size: 1.3em;\n  padding: 5px;\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n  line-height: 1.4em;\n`;\n\nfunction Paragraph({\n  slideNumber,\n  item,\n}: {\n  slideNumber: number;\n  item: Element;\n}) {\n  const [selected, setSelected] = useState(false);\n  const editingElement = useRef<HTMLDivElement | null>(null);\n\n  const { removeElement, changeElementValue } = useContext(SlidesContext);\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n    if (event.target.innerText === \"\") {\n      removeElement(slideNumber, item.id);\n    } else {\n      changeElementValue(slideNumber, item.id, event.target.innerText);\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(slideNumber, item.id);\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n      editingElement.current && editingElement.current.blur();\n    }\n  }\n\n  return (\n    <Container>\n      <StyledParagraph\n        selected={selected}\n        onKeyDown={checkMouseDown}\n        ref={editingElement}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        tabIndex={-1}\n        data-id={item.id}\n      >\n        {item.value}\n      </StyledParagraph>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nParagraph.displayName = \"Paragraph\";\n\nexport default Paragraph;\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { Element } from \"../../types\";\n\nconst StyledImage = styled.img<{ selected: boolean; loadingState: boolean }>`\n  font-size: 1.3em;\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n  background: ${({ loadingState }) =>\n    loadingState ? \"rgba(0, 0, 0, 0.1)\" : \"none\"};\n`;\n\nfunction Image({ slideNumber, item }: { slideNumber: number; item: Element }) {\n  const [selected, setSelected] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const { removeElement } = useContext(SlidesContext);\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    setSelected(false);\n  }\n  function edit(event: React.FocusEvent<HTMLDivElement>) {\n    setSelected(true);\n  }\n\n  function keydown(event: React.KeyboardEvent<HTMLImageElement>) {\n    if (event.key === \"Backspace\") {\n      removeElement(slideNumber, item.id);\n    }\n  }\n\n  return (\n    <StyledImage\n      onLoad={() => setLoading(false)}\n      loadingState={loading}\n      selected={selected}\n      src={item.value}\n      alt={item.value}\n      onBlur={finishEditing}\n      onKeyDown={keydown}\n      onFocus={edit}\n      tabIndex={-1}\n      data-id={item.id}\n    />\n  );\n}\n\nImage.displayName = \"Image\";\n\nexport default Image;\n","import React, { useRef, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledList = styled.ul<{ selected: boolean }>`\n  white-space: pre-wrap;\n  font-size: 1.3em;\n  padding-left: 1em; // fix lists' left padding\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n\n  line-height: 1.4em;\n  list-style-type: circle;\n`;\n\nfunction List({ slideNumber, item }: { slideNumber: number; item: Element }) {\n  const [selected, setSelected] = useState(false);\n  const editingElement = useRef<HTMLUListElement | null>(null);\n\n  const { removeElement, changeElementValue } = useContext(SlidesContext);\n\n  function editHeading() {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLUListElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n    if (event.target.innerText === \"\") {\n      removeElement(slideNumber, item.id);\n    } else {\n      changeElementValue(slideNumber, item.id, event.target.innerText);\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(slideNumber, item.id);\n  }\n\n  function sanitizeHTML(text: string) {\n    var element = document.createElement(\"div\");\n    element.innerText = text;\n    return element.innerHTML;\n  }\n\n  return (\n    <Container>\n      <StyledList\n        selected={selected}\n        ref={editingElement}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        tabIndex={-1}\n        data-id={item.id}\n        dangerouslySetInnerHTML={{\n          // React can't deal with a content editable list and manage its children\n          __html: item.value\n            .split(\"\\n\")\n            .map((item) => `<li>${sanitizeHTML(item)}</li>`)\n            .join(\"\"),\n        }}\n      ></StyledList>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nList.displayName = \"List\";\n\nexport default List;\n","import React, { useRef, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../../context/slides\";\nimport { Element } from \"../../types\";\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StyledButton = styled.button`\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst StyledBlockquote = styled.blockquote<{ selected: boolean }>`\n  font-size: 1.3em;\n  line-height: 1.4em;\n  padding: 50px;\n  border: ${({ selected }) => (selected ? \"1px solid red\" : \"none\")};\n  quotes: \"“\" \"”\" \"‘\" \"’\";\n\n  background: #f9f9f9;\n\n  &:before {\n    color: #ccc;\n    content: open-quote;\n    font-size: 4em;\n    line-height: 0.1em;\n    margin-right: 0.25em;\n    vertical-align: -0.4em;\n  }\n`;\n\nfunction Blockquote({\n  slideNumber,\n  item,\n}: {\n  slideNumber: number;\n  item: Element;\n}) {\n  const [selected, setSelected] = useState(false);\n  const editingElement = useRef<HTMLDivElement | null>(null);\n\n  const { removeElement, changeElementValue } = useContext(SlidesContext);\n\n  function editHeading(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"true\");\n    setSelected(true);\n  }\n\n  function finishEditing(event: React.FocusEvent<HTMLDivElement>) {\n    editingElement.current &&\n      editingElement.current.setAttribute(\"contenteditable\", \"false\");\n    setSelected(false);\n    if (event.target.innerText === \"\") {\n      removeElement(slideNumber, item.id);\n    } else {\n      changeElementValue(slideNumber, item.id, event.target.innerText);\n    }\n  }\n\n  function changeHeadingText(event: any) {}\n\n  function remove() {\n    removeElement(slideNumber, item.id);\n  }\n\n  function checkMouseDown(event: React.KeyboardEvent<HTMLDivElement>) {\n    if (event.code === \"Enter\") {\n      event.preventDefault();\n      editingElement.current && editingElement.current.blur();\n    }\n  }\n\n  return (\n    <Container>\n      <StyledBlockquote\n        selected={selected}\n        onKeyDown={checkMouseDown}\n        ref={editingElement}\n        onInput={changeHeadingText}\n        onBlur={finishEditing}\n        onFocus={editHeading}\n        tabIndex={-1}\n        data-id={item.id}\n      >\n        {item.value}\n      </StyledBlockquote>\n      {selected && <StyledButton onMouseDown={remove}>X</StyledButton>}\n    </Container>\n  );\n}\n\nBlockquote.displayName = \"Blockquote\";\n\nexport default Blockquote;\n","import { useLayoutEffect, useState, useContext, forwardRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SlidesContext } from \"../context/slides\";\nimport { DeckContext } from \"../context/deck\";\n\nimport Header from \"./elements/Header\";\nimport Paragraph from \"./elements/Paragraph\";\nimport Image from \"./elements/Image\";\nimport List from \"./elements/List\";\nimport Blockquote from \"./elements/Blockquote\";\n\nimport { renderersMap } from \"../renderers\";\n\nconst SizeWrapper = styled.div<{ scaleSize: number }>`\n  width: 960px;\n  height: 700px;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  transform-origin: center center;\n  transform: ${({ scaleSize }) => `scale(${scaleSize})`};\n`;\n\nconst StyledSlide = styled.div`\n  background: white;\n  width: 100%;\n  height: 100%;\n\n  a {\n    color: #51c2f7;\n  }\n`;\n\nfunction Slide({ present }: { present: boolean }, ref: any) {\n  const { slides } = useContext(SlidesContext);\n  const { currentSlide, size } = useContext(DeckContext);\n  const [scale, setScale] = useState(1);\n\n  const slide = slides[currentSlide];\n  const Wrapper = renderersMap[slide.state];\n\n  function updateSize() {\n    // scale to fit window width and/or height\n    const scale = Math.min(\n      window.innerWidth / size[0],\n      window.innerHeight / size[1]\n    );\n    setScale(scale);\n  }\n  useLayoutEffect(() => {\n    window.addEventListener(\"resize\", updateSize);\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []); // eslint-disable-line\n\n  return (\n    <SizeWrapper scaleSize={scale > 1 && !present ? 1 : scale}>\n      <StyledSlide className={slide.state} ref={ref}>\n        <Wrapper>\n          {slide.elements.map((item) => {\n            switch (item.type) {\n              case \"heading\": {\n                return (\n                  <Header\n                    slideNumber={currentSlide}\n                    key={item.id}\n                    item={item}\n                  />\n                );\n              }\n              case \"paragraph\": {\n                return (\n                  <Paragraph\n                    slideNumber={currentSlide}\n                    key={item.id}\n                    item={item}\n                  />\n                );\n              }\n              case \"image\": {\n                return (\n                  <Image slideNumber={currentSlide} key={item.id} item={item} />\n                );\n              }\n              case \"list\": {\n                return (\n                  <List slideNumber={currentSlide} key={item.id} item={item} />\n                );\n              }\n              case \"blockquote\": {\n                return (\n                  <Blockquote\n                    slideNumber={currentSlide}\n                    key={item.id}\n                    item={item}\n                  />\n                );\n              }\n              default: {\n                return <></>;\n              }\n            }\n          })}\n        </Wrapper>\n      </StyledSlide>\n    </SizeWrapper>\n  );\n}\n\nexport default forwardRef<HTMLDivElement, { present: boolean }>(Slide);\n","import screenfull from \"screenfull\";\nimport { useRef, useEffect } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nimport { SlidesContext, useSlidesState } from \"../context/slides\";\nimport { ThumbnailsContext, useThumbnailsState } from \"../context/thumbnails\";\nimport { DeckContext, useDeckState } from \"../context/deck\";\n\nimport Elements from \"./Elements\";\nimport Controls from \"./Controls\";\nimport Slide from \"./Slide\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  html,\n  body {\n    height: 100%;\n  }\n\n  body {\n    font-family: \"Roboto\", sans-serif;\n  }\n`;\n\nconst Wrapper = styled.div`\n  background: #eee;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst SlideWrapper = styled.div`\n  flex: 1;\n`;\n\nfunction App() {\n  const slideWrapperRef = useRef<HTMLDivElement>(null);\n\n  const {\n    slides,\n    addElement,\n    removeSlide,\n    removeElement,\n    changeElementValue,\n    addSlide,\n  } = useSlidesState();\n\n  const { thumbnails, setThumbnails } = useThumbnailsState();\n  const {\n    currentSlide,\n    setCurrentSlide,\n    present,\n    setPresent,\n    size,\n    setSize,\n  } = useDeckState();\n\n  useEffect(() => {\n    const callback = () => {\n      if (screenfull.isEnabled) {\n        if (!screenfull.isFullscreen) {\n          setPresent(false);\n        }\n      }\n    };\n    if (screenfull.isEnabled) {\n      screenfull.on(\"change\", callback);\n    }\n    const unsubscribe = () => {\n      if (screenfull.isEnabled) {\n        screenfull.off(\"change\", callback);\n      }\n    };\n    return unsubscribe;\n  }, [present]); // eslint-disable-line\n\n  useEffect(() => {\n    const callback = (event: any) => {\n      if (event.code === \"ArrowLeft\") {\n        setCurrentSlide(currentSlide === 0 ? 0 : currentSlide - 1);\n      }\n      if (event.code === \"ArrowRight\") {\n        const totalSlides = slides.length;\n        setCurrentSlide(\n          currentSlide === totalSlides - 1 ? currentSlide : currentSlide + 1\n        );\n      }\n    };\n\n    window.addEventListener(\"keydown\", callback);\n\n    return () => window.removeEventListener(\"keydown\", callback);\n  }, [currentSlide, slides]); // eslint-disable-line\n\n  return (\n    <ThumbnailsContext.Provider value={{ thumbnails, setThumbnails }}>\n      <DeckContext.Provider\n        value={{\n          currentSlide,\n          setCurrentSlide,\n          present,\n          setPresent,\n          size,\n          setSize,\n        }}\n      >\n        <SlidesContext.Provider\n          value={{\n            slides,\n            addElement,\n            removeElement,\n            changeElementValue,\n            removeSlide,\n            addSlide,\n          }}\n        >\n          <GlobalStyle />\n          <Wrapper>\n            {!present && (\n              <Elements\n                togglePresent={() => {\n                  setPresent(!present);\n                  if (screenfull.isEnabled) {\n                    screenfull.request();\n                  }\n                }}\n              />\n            )}\n            <SlideWrapper>\n              <Slide present={present} ref={slideWrapperRef} />\n            </SlideWrapper>\n            {!present && <Controls ref={slideWrapperRef} />}\n          </Wrapper>\n        </SlidesContext.Provider>\n      </DeckContext.Provider>\n    </ThumbnailsContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}